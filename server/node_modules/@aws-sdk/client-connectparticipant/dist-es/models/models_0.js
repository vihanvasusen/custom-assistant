import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ConnectParticipantServiceException as __BaseException } from "./ConnectParticipantServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalServerException extends __BaseException {
    name = "InternalServerException";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export class ValidationException extends __BaseException {
    name = "ValidationException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
    }
}
export class ConflictException extends __BaseException {
    name = "ConflictException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    name = "ServiceQuotaExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const ConnectionType = {
    CONNECTION_CREDENTIALS: "CONNECTION_CREDENTIALS",
    WEBSOCKET: "WEBSOCKET",
};
export const ResourceType = {
    CONTACT: "CONTACT",
    CONTACT_FLOW: "CONTACT_FLOW",
    HIERARCHY_GROUP: "HIERARCHY_GROUP",
    HIERARCHY_LEVEL: "HIERARCHY_LEVEL",
    INSTANCE: "INSTANCE",
    PARTICIPANT: "PARTICIPANT",
    PHONE_NUMBER: "PHONE_NUMBER",
    USER: "USER",
};
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    Message;
    ResourceId;
    ResourceType;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.ResourceId = opts.ResourceId;
        this.ResourceType = opts.ResourceType;
    }
}
export const ScanDirection = {
    BACKWARD: "BACKWARD",
    FORWARD: "FORWARD",
};
export const SortKey = {
    ASCENDING: "ASCENDING",
    DESCENDING: "DESCENDING",
};
export const ArtifactStatus = {
    APPROVED: "APPROVED",
    IN_PROGRESS: "IN_PROGRESS",
    REJECTED: "REJECTED",
};
export const ParticipantRole = {
    AGENT: "AGENT",
    CUSTOMER: "CUSTOMER",
    CUSTOM_BOT: "CUSTOM_BOT",
    SUPERVISOR: "SUPERVISOR",
    SYSTEM: "SYSTEM",
};
export const ChatItemType = {
    ATTACHMENT: "ATTACHMENT",
    CHAT_ENDED: "CHAT_ENDED",
    CONNECTION_ACK: "CONNECTION_ACK",
    EVENT: "EVENT",
    MESSAGE: "MESSAGE",
    MESSAGE_DELIVERED: "MESSAGE_DELIVERED",
    MESSAGE_READ: "MESSAGE_READ",
    PARTICIPANT_JOINED: "PARTICIPANT_JOINED",
    PARTICIPANT_LEFT: "PARTICIPANT_LEFT",
    TRANSFER_FAILED: "TRANSFER_FAILED",
    TRANSFER_SUCCEEDED: "TRANSFER_SUCCEEDED",
    TYPING: "TYPING",
};
export const ViewContentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.InputSchema && { InputSchema: SENSITIVE_STRING }),
    ...(obj.Template && { Template: SENSITIVE_STRING }),
    ...(obj.Actions && { Actions: SENSITIVE_STRING }),
});
export const ViewFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Content && { Content: ViewContentFilterSensitiveLog(obj.Content) }),
});
export const DescribeViewResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.View && { View: ViewFilterSensitiveLog(obj.View) }),
});
