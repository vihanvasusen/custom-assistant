import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ConnectServiceException as __BaseException } from "./ConnectServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const ActionType: {
  readonly ASSIGN_CONTACT_CATEGORY: "ASSIGN_CONTACT_CATEGORY";
  readonly ASSIGN_SLA: "ASSIGN_SLA";
  readonly CREATE_CASE: "CREATE_CASE";
  readonly CREATE_TASK: "CREATE_TASK";
  readonly END_ASSOCIATED_TASKS: "END_ASSOCIATED_TASKS";
  readonly GENERATE_EVENTBRIDGE_EVENT: "GENERATE_EVENTBRIDGE_EVENT";
  readonly SEND_NOTIFICATION: "SEND_NOTIFICATION";
  readonly SUBMIT_AUTO_EVALUATION: "SUBMIT_AUTO_EVALUATION";
  readonly UPDATE_CASE: "UPDATE_CASE";
};
export type ActionType = (typeof ActionType)[keyof typeof ActionType];
export interface ActionSummary {
  ActionType: ActionType | undefined;
}
export interface ActivateEvaluationFormRequest {
  InstanceId: string | undefined;
  EvaluationFormId: string | undefined;
  EvaluationFormVersion: number | undefined;
}
export interface ActivateEvaluationFormResponse {
  EvaluationFormId: string | undefined;
  EvaluationFormArn: string | undefined;
  EvaluationFormVersion: number | undefined;
}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class ResourceConflictException extends __BaseException {
  readonly name: "ResourceConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceConflictException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface EmailRecipient {
  Address?: string | undefined;
  DisplayName?: string | undefined;
}
export interface AdditionalEmailRecipients {
  ToList?: EmailRecipient[] | undefined;
  CcList?: EmailRecipient[] | undefined;
}
export declare const AgentAvailabilityTimer: {
  readonly TIME_SINCE_LAST_ACTIVITY: "TIME_SINCE_LAST_ACTIVITY";
  readonly TIME_SINCE_LAST_INBOUND: "TIME_SINCE_LAST_INBOUND";
};
export type AgentAvailabilityTimer =
  (typeof AgentAvailabilityTimer)[keyof typeof AgentAvailabilityTimer];
export interface Distribution {
  Region: string | undefined;
  Percentage: number | undefined;
}
export interface AgentConfig {
  Distributions: Distribution[] | undefined;
}
export declare const ContactState: {
  readonly CONNECTED: "CONNECTED";
  readonly CONNECTED_ONHOLD: "CONNECTED_ONHOLD";
  readonly CONNECTING: "CONNECTING";
  readonly ENDED: "ENDED";
  readonly ERROR: "ERROR";
  readonly INCOMING: "INCOMING";
  readonly MISSED: "MISSED";
  readonly PENDING: "PENDING";
  readonly REJECTED: "REJECTED";
};
export type ContactState = (typeof ContactState)[keyof typeof ContactState];
export declare const Channel: {
  readonly CHAT: "CHAT";
  readonly EMAIL: "EMAIL";
  readonly TASK: "TASK";
  readonly VOICE: "VOICE";
};
export type Channel = (typeof Channel)[keyof typeof Channel];
export declare const ContactInitiationMethod: {
  readonly AGENT_REPLY: "AGENT_REPLY";
  readonly API: "API";
  readonly CALLBACK: "CALLBACK";
  readonly DISCONNECT: "DISCONNECT";
  readonly EXTERNAL_OUTBOUND: "EXTERNAL_OUTBOUND";
  readonly FLOW: "FLOW";
  readonly INBOUND: "INBOUND";
  readonly MONITOR: "MONITOR";
  readonly OUTBOUND: "OUTBOUND";
  readonly QUEUE_TRANSFER: "QUEUE_TRANSFER";
  readonly TRANSFER: "TRANSFER";
  readonly WEBRTC_API: "WEBRTC_API";
};
export type ContactInitiationMethod =
  (typeof ContactInitiationMethod)[keyof typeof ContactInitiationMethod];
export interface QueueReference {
  Id?: string | undefined;
  Arn?: string | undefined;
}
export interface AgentContactReference {
  ContactId?: string | undefined;
  Channel?: Channel | undefined;
  InitiationMethod?: ContactInitiationMethod | undefined;
  AgentContactState?: ContactState | undefined;
  StateStartTimestamp?: Date | undefined;
  ConnectedToAgentTimestamp?: Date | undefined;
  Queue?: QueueReference | undefined;
}
export interface AgentHierarchyGroup {
  Arn?: string | undefined;
}
export interface AgentHierarchyGroups {
  L1Ids?: string[] | undefined;
  L2Ids?: string[] | undefined;
  L3Ids?: string[] | undefined;
  L4Ids?: string[] | undefined;
  L5Ids?: string[] | undefined;
}
export declare const ScreenShareCapability: {
  readonly SEND: "SEND";
};
export type ScreenShareCapability =
  (typeof ScreenShareCapability)[keyof typeof ScreenShareCapability];
export declare const VideoCapability: {
  readonly SEND: "SEND";
};
export type VideoCapability =
  (typeof VideoCapability)[keyof typeof VideoCapability];
export interface ParticipantCapabilities {
  Video?: VideoCapability | undefined;
  ScreenShare?: ScreenShareCapability | undefined;
}
export interface DeviceInfo {
  PlatformName?: string | undefined;
  PlatformVersion?: string | undefined;
  OperatingSystem?: string | undefined;
}
export interface HierarchyGroups {
  Level1?: AgentHierarchyGroup | undefined;
  Level2?: AgentHierarchyGroup | undefined;
  Level3?: AgentHierarchyGroup | undefined;
  Level4?: AgentHierarchyGroup | undefined;
  Level5?: AgentHierarchyGroup | undefined;
}
export interface AgentInfo {
  Id?: string | undefined;
  ConnectedToAgentTimestamp?: Date | undefined;
  AgentPauseDurationInSeconds?: number | undefined;
  HierarchyGroups?: HierarchyGroups | undefined;
  DeviceInfo?: DeviceInfo | undefined;
  Capabilities?: ParticipantCapabilities | undefined;
}
export interface AudioQualityMetricsInfo {
  QualityScore?: number | undefined;
  PotentialQualityIssues?: string[] | undefined;
}
export interface AgentQualityMetrics {
  Audio?: AudioQualityMetricsInfo | undefined;
}
export interface AgentsCriteria {
  AgentIds?: string[] | undefined;
}
export declare const AgentStatusState: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type AgentStatusState =
  (typeof AgentStatusState)[keyof typeof AgentStatusState];
export declare const AgentStatusType: {
  readonly CUSTOM: "CUSTOM";
  readonly OFFLINE: "OFFLINE";
  readonly ROUTABLE: "ROUTABLE";
};
export type AgentStatusType =
  (typeof AgentStatusType)[keyof typeof AgentStatusType];
export interface AgentStatus {
  AgentStatusARN?: string | undefined;
  AgentStatusId?: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  Type?: AgentStatusType | undefined;
  DisplayOrder?: number | undefined;
  State?: AgentStatusState | undefined;
  Tags?: Record<string, string> | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface AgentStatusReference {
  StatusStartTimestamp?: Date | undefined;
  StatusArn?: string | undefined;
  StatusName?: string | undefined;
}
export declare const StringComparisonType: {
  readonly CONTAINS: "CONTAINS";
  readonly EXACT: "EXACT";
  readonly STARTS_WITH: "STARTS_WITH";
};
export type StringComparisonType =
  (typeof StringComparisonType)[keyof typeof StringComparisonType];
export interface StringCondition {
  FieldName?: string | undefined;
  Value?: string | undefined;
  ComparisonType?: StringComparisonType | undefined;
}
export interface TagCondition {
  TagKey?: string | undefined;
  TagValue?: string | undefined;
}
export interface CommonAttributeAndCondition {
  TagConditions?: TagCondition[] | undefined;
}
export interface ControlPlaneAttributeFilter {
  OrConditions?: CommonAttributeAndCondition[] | undefined;
  AndCondition?: CommonAttributeAndCondition | undefined;
  TagCondition?: TagCondition | undefined;
}
export interface AgentStatusSearchFilter {
  AttributeFilter?: ControlPlaneAttributeFilter | undefined;
}
export interface AgentStatusSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  Type?: AgentStatusType | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface AllowedCapabilities {
  Customer?: ParticipantCapabilities | undefined;
  Agent?: ParticipantCapabilities | undefined;
}
export declare const MonitorCapability: {
  readonly BARGE: "BARGE";
  readonly SILENT_MONITOR: "SILENT_MONITOR";
};
export type MonitorCapability =
  (typeof MonitorCapability)[keyof typeof MonitorCapability];
export interface AssociateAnalyticsDataSetRequest {
  InstanceId: string | undefined;
  DataSetId: string | undefined;
  TargetAccountId?: string | undefined;
}
export interface AssociateAnalyticsDataSetResponse {
  DataSetId?: string | undefined;
  TargetAccountId?: string | undefined;
  ResourceShareId?: string | undefined;
  ResourceShareArn?: string | undefined;
}
export declare const AttachedFileInvalidRequestExceptionReason: {
  readonly INVALID_FILE_NAME: "INVALID_FILE_NAME";
  readonly INVALID_FILE_SIZE: "INVALID_FILE_SIZE";
  readonly INVALID_FILE_TYPE: "INVALID_FILE_TYPE";
};
export type AttachedFileInvalidRequestExceptionReason =
  (typeof AttachedFileInvalidRequestExceptionReason)[keyof typeof AttachedFileInvalidRequestExceptionReason];
export type InvalidRequestExceptionReason =
  | InvalidRequestExceptionReason.AttachedFileInvalidRequestExceptionReasonMember
  | InvalidRequestExceptionReason.$UnknownMember;
export declare namespace InvalidRequestExceptionReason {
  interface AttachedFileInvalidRequestExceptionReasonMember {
    AttachedFileInvalidRequestExceptionReason: AttachedFileInvalidRequestExceptionReason;
    $unknown?: never;
  }
  interface $UnknownMember {
    AttachedFileInvalidRequestExceptionReason?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    AttachedFileInvalidRequestExceptionReason: (
      value: AttachedFileInvalidRequestExceptionReason
    ) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: InvalidRequestExceptionReason,
    visitor: Visitor<T>
  ) => T;
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string | undefined;
  Reason?: InvalidRequestExceptionReason | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface AssociateApprovedOriginRequest {
  InstanceId: string | undefined;
  Origin: string | undefined;
  ClientToken?: string | undefined;
}
export declare const AttachedFileServiceQuotaExceededExceptionReason: {
  readonly TOTAL_FILE_COUNT_EXCEEDED: "TOTAL_FILE_COUNT_EXCEEDED";
  readonly TOTAL_FILE_SIZE_EXCEEDED: "TOTAL_FILE_SIZE_EXCEEDED";
};
export type AttachedFileServiceQuotaExceededExceptionReason =
  (typeof AttachedFileServiceQuotaExceededExceptionReason)[keyof typeof AttachedFileServiceQuotaExceededExceptionReason];
export type ServiceQuotaExceededExceptionReason =
  | ServiceQuotaExceededExceptionReason.AttachedFileServiceQuotaExceededExceptionReasonMember
  | ServiceQuotaExceededExceptionReason.$UnknownMember;
export declare namespace ServiceQuotaExceededExceptionReason {
  interface AttachedFileServiceQuotaExceededExceptionReasonMember {
    AttachedFileServiceQuotaExceededExceptionReason: AttachedFileServiceQuotaExceededExceptionReason;
    $unknown?: never;
  }
  interface $UnknownMember {
    AttachedFileServiceQuotaExceededExceptionReason?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    AttachedFileServiceQuotaExceededExceptionReason: (
      value: AttachedFileServiceQuotaExceededExceptionReason
    ) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: ServiceQuotaExceededExceptionReason,
    visitor: Visitor<T>
  ) => T;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  Reason?: ServiceQuotaExceededExceptionReason | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface LexBot {
  Name: string | undefined;
  LexRegion: string | undefined;
}
export interface LexV2Bot {
  AliasArn?: string | undefined;
}
export interface AssociateBotRequest {
  InstanceId: string | undefined;
  LexBot?: LexBot | undefined;
  LexV2Bot?: LexV2Bot | undefined;
  ClientToken?: string | undefined;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare const VocabularyLanguageCode: {
  readonly AR_AE: "ar-AE";
  readonly CA_ES: "ca-ES";
  readonly DA_DK: "da-DK";
  readonly DE_CH: "de-CH";
  readonly DE_DE: "de-DE";
  readonly EN_AB: "en-AB";
  readonly EN_AU: "en-AU";
  readonly EN_GB: "en-GB";
  readonly EN_IE: "en-IE";
  readonly EN_IN: "en-IN";
  readonly EN_NZ: "en-NZ";
  readonly EN_US: "en-US";
  readonly EN_WL: "en-WL";
  readonly EN_ZA: "en-ZA";
  readonly ES_ES: "es-ES";
  readonly ES_US: "es-US";
  readonly FI_FI: "fi-FI";
  readonly FR_CA: "fr-CA";
  readonly FR_FR: "fr-FR";
  readonly HI_IN: "hi-IN";
  readonly ID_ID: "id-ID";
  readonly IT_IT: "it-IT";
  readonly JA_JP: "ja-JP";
  readonly KO_KR: "ko-KR";
  readonly MS_MY: "ms-MY";
  readonly NL_NL: "nl-NL";
  readonly NO_NO: "no-NO";
  readonly PL_PL: "pl-PL";
  readonly PT_BR: "pt-BR";
  readonly PT_PT: "pt-PT";
  readonly SV_SE: "sv-SE";
  readonly TL_PH: "tl-PH";
  readonly ZH_CN: "zh-CN";
};
export type VocabularyLanguageCode =
  (typeof VocabularyLanguageCode)[keyof typeof VocabularyLanguageCode];
export interface AssociateDefaultVocabularyRequest {
  InstanceId: string | undefined;
  LanguageCode: VocabularyLanguageCode | undefined;
  VocabularyId?: string | undefined;
}
export interface AssociateDefaultVocabularyResponse {}
export declare const FlowAssociationResourceType: {
  readonly ANALYTICS_CONNECTOR: "ANALYTICS_CONNECTOR";
  readonly INBOUND_EMAIL: "INBOUND_EMAIL";
  readonly OUTBOUND_EMAIL: "OUTBOUND_EMAIL";
  readonly SMS_PHONE_NUMBER: "SMS_PHONE_NUMBER";
  readonly WHATSAPP_MESSAGING_PHONE_NUMBER: "WHATSAPP_MESSAGING_PHONE_NUMBER";
};
export type FlowAssociationResourceType =
  (typeof FlowAssociationResourceType)[keyof typeof FlowAssociationResourceType];
export interface AssociateFlowRequest {
  InstanceId: string | undefined;
  ResourceId: string | undefined;
  FlowId: string | undefined;
  ResourceType: FlowAssociationResourceType | undefined;
}
export interface AssociateFlowResponse {}
export declare const InstanceStorageResourceType: {
  readonly AGENT_EVENTS: "AGENT_EVENTS";
  readonly ATTACHMENTS: "ATTACHMENTS";
  readonly CALL_RECORDINGS: "CALL_RECORDINGS";
  readonly CHAT_TRANSCRIPTS: "CHAT_TRANSCRIPTS";
  readonly CONTACT_EVALUATIONS: "CONTACT_EVALUATIONS";
  readonly CONTACT_TRACE_RECORDS: "CONTACT_TRACE_RECORDS";
  readonly EMAIL_MESSAGES: "EMAIL_MESSAGES";
  readonly MEDIA_STREAMS: "MEDIA_STREAMS";
  readonly REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS: "REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS";
  readonly REAL_TIME_CONTACT_ANALYSIS_SEGMENTS: "REAL_TIME_CONTACT_ANALYSIS_SEGMENTS";
  readonly REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS: "REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS";
  readonly SCHEDULED_REPORTS: "SCHEDULED_REPORTS";
  readonly SCREEN_RECORDINGS: "SCREEN_RECORDINGS";
};
export type InstanceStorageResourceType =
  (typeof InstanceStorageResourceType)[keyof typeof InstanceStorageResourceType];
export interface KinesisFirehoseConfig {
  FirehoseArn: string | undefined;
}
export interface KinesisStreamConfig {
  StreamArn: string | undefined;
}
export declare const EncryptionType: {
  readonly KMS: "KMS";
};
export type EncryptionType =
  (typeof EncryptionType)[keyof typeof EncryptionType];
export interface EncryptionConfig {
  EncryptionType: EncryptionType | undefined;
  KeyId: string | undefined;
}
export interface KinesisVideoStreamConfig {
  Prefix: string | undefined;
  RetentionPeriodHours: number | undefined;
  EncryptionConfig: EncryptionConfig | undefined;
}
export interface S3Config {
  BucketName: string | undefined;
  BucketPrefix: string | undefined;
  EncryptionConfig?: EncryptionConfig | undefined;
}
export declare const StorageType: {
  readonly KINESIS_FIREHOSE: "KINESIS_FIREHOSE";
  readonly KINESIS_STREAM: "KINESIS_STREAM";
  readonly KINESIS_VIDEO_STREAM: "KINESIS_VIDEO_STREAM";
  readonly S3: "S3";
};
export type StorageType = (typeof StorageType)[keyof typeof StorageType];
export interface InstanceStorageConfig {
  AssociationId?: string | undefined;
  StorageType: StorageType | undefined;
  S3Config?: S3Config | undefined;
  KinesisVideoStreamConfig?: KinesisVideoStreamConfig | undefined;
  KinesisStreamConfig?: KinesisStreamConfig | undefined;
  KinesisFirehoseConfig?: KinesisFirehoseConfig | undefined;
}
export interface AssociateInstanceStorageConfigRequest {
  InstanceId: string | undefined;
  ResourceType: InstanceStorageResourceType | undefined;
  StorageConfig: InstanceStorageConfig | undefined;
  ClientToken?: string | undefined;
}
export interface AssociateInstanceStorageConfigResponse {
  AssociationId?: string | undefined;
}
export interface AssociateLambdaFunctionRequest {
  InstanceId: string | undefined;
  FunctionArn: string | undefined;
  ClientToken?: string | undefined;
}
export interface AssociateLexBotRequest {
  InstanceId: string | undefined;
  LexBot: LexBot | undefined;
  ClientToken?: string | undefined;
}
export interface AssociatePhoneNumberContactFlowRequest {
  PhoneNumberId: string | undefined;
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
}
export interface AssociateQueueQuickConnectsRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  QuickConnectIds: string[] | undefined;
}
export interface RoutingProfileQueueReference {
  QueueId: string | undefined;
  Channel: Channel | undefined;
}
export interface RoutingProfileQueueConfig {
  QueueReference: RoutingProfileQueueReference | undefined;
  Priority: number | undefined;
  Delay: number | undefined;
}
export interface AssociateRoutingProfileQueuesRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  QueueConfigs: RoutingProfileQueueConfig[] | undefined;
}
export interface AssociateSecurityKeyRequest {
  InstanceId: string | undefined;
  Key: string | undefined;
  ClientToken?: string | undefined;
}
export interface AssociateSecurityKeyResponse {
  AssociationId?: string | undefined;
}
export interface AssociateTrafficDistributionGroupUserRequest {
  TrafficDistributionGroupId: string | undefined;
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface AssociateTrafficDistributionGroupUserResponse {}
export interface UserProficiency {
  AttributeName: string | undefined;
  AttributeValue: string | undefined;
  Level: number | undefined;
}
export interface AssociateUserProficienciesRequest {
  InstanceId: string | undefined;
  UserId: string | undefined;
  UserProficiencies: UserProficiency[] | undefined;
}
export interface BatchAssociateAnalyticsDataSetRequest {
  InstanceId: string | undefined;
  DataSetIds: string[] | undefined;
  TargetAccountId?: string | undefined;
}
export interface AnalyticsDataAssociationResult {
  DataSetId?: string | undefined;
  TargetAccountId?: string | undefined;
  ResourceShareId?: string | undefined;
  ResourceShareArn?: string | undefined;
  ResourceShareStatus?: string | undefined;
}
export interface ErrorResult {
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
}
export interface BatchAssociateAnalyticsDataSetResponse {
  Created?: AnalyticsDataAssociationResult[] | undefined;
  Errors?: ErrorResult[] | undefined;
}
export interface BatchDisassociateAnalyticsDataSetRequest {
  InstanceId: string | undefined;
  DataSetIds: string[] | undefined;
  TargetAccountId?: string | undefined;
}
export interface BatchDisassociateAnalyticsDataSetResponse {
  Deleted?: string[] | undefined;
  Errors?: ErrorResult[] | undefined;
}
export interface BatchGetAttachedFileMetadataRequest {
  FileIds: string[] | undefined;
  InstanceId: string | undefined;
  AssociatedResourceArn: string | undefined;
}
export interface AttachedFileError {
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
  FileId?: string | undefined;
}
export type CreatedByInfo =
  | CreatedByInfo.AWSIdentityArnMember
  | CreatedByInfo.ConnectUserArnMember
  | CreatedByInfo.$UnknownMember;
export declare namespace CreatedByInfo {
  interface ConnectUserArnMember {
    ConnectUserArn: string;
    AWSIdentityArn?: never;
    $unknown?: never;
  }
  interface AWSIdentityArnMember {
    ConnectUserArn?: never;
    AWSIdentityArn: string;
    $unknown?: never;
  }
  interface $UnknownMember {
    ConnectUserArn?: never;
    AWSIdentityArn?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    ConnectUserArn: (value: string) => T;
    AWSIdentityArn: (value: string) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: CreatedByInfo, visitor: Visitor<T>) => T;
}
export declare const FileStatusType: {
  readonly APPROVED: "APPROVED";
  readonly FAILED: "FAILED";
  readonly PROCESSING: "PROCESSING";
  readonly REJECTED: "REJECTED";
};
export type FileStatusType =
  (typeof FileStatusType)[keyof typeof FileStatusType];
export declare const FileUseCaseType: {
  readonly ATTACHMENT: "ATTACHMENT";
  readonly EMAIL_MESSAGE: "EMAIL_MESSAGE";
};
export type FileUseCaseType =
  (typeof FileUseCaseType)[keyof typeof FileUseCaseType];
export interface AttachedFile {
  CreationTime: string | undefined;
  FileArn: string | undefined;
  FileId: string | undefined;
  FileName: string | undefined;
  FileSizeInBytes: number | undefined;
  FileStatus: FileStatusType | undefined;
  CreatedBy?: CreatedByInfo | undefined;
  FileUseCaseType?: FileUseCaseType | undefined;
  AssociatedResourceArn?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface BatchGetAttachedFileMetadataResponse {
  Files?: AttachedFile[] | undefined;
  Errors?: AttachedFileError[] | undefined;
}
export declare const ListFlowAssociationResourceType: {
  readonly ANALYTICS_CONNECTOR: "ANALYTICS_CONNECTOR";
  readonly INBOUND_EMAIL: "INBOUND_EMAIL";
  readonly OUTBOUND_EMAIL: "OUTBOUND_EMAIL";
  readonly VOICE_PHONE_NUMBER: "VOICE_PHONE_NUMBER";
  readonly WHATSAPP_MESSAGING_PHONE_NUMBER: "WHATSAPP_MESSAGING_PHONE_NUMBER";
};
export type ListFlowAssociationResourceType =
  (typeof ListFlowAssociationResourceType)[keyof typeof ListFlowAssociationResourceType];
export interface BatchGetFlowAssociationRequest {
  InstanceId: string | undefined;
  ResourceIds: string[] | undefined;
  ResourceType?: ListFlowAssociationResourceType | undefined;
}
export interface FlowAssociationSummary {
  ResourceId?: string | undefined;
  FlowId?: string | undefined;
  ResourceType?: ListFlowAssociationResourceType | undefined;
}
export interface BatchGetFlowAssociationResponse {
  FlowAssociationSummaryList?: FlowAssociationSummary[] | undefined;
}
export interface Campaign {
  CampaignId?: string | undefined;
}
export declare const EndpointType: {
  readonly CONNECT_PHONENUMBER_ARN: "CONNECT_PHONENUMBER_ARN";
  readonly CONTACT_FLOW: "CONTACT_FLOW";
  readonly EMAIL_ADDRESS: "EMAIL_ADDRESS";
  readonly TELEPHONE_NUMBER: "TELEPHONE_NUMBER";
  readonly VOIP: "VOIP";
};
export type EndpointType = (typeof EndpointType)[keyof typeof EndpointType];
export interface Endpoint {
  Type?: EndpointType | undefined;
  Address?: string | undefined;
}
export interface ContactDataRequest {
  SystemEndpoint?: Endpoint | undefined;
  CustomerEndpoint?: Endpoint | undefined;
  RequestIdentifier?: string | undefined;
  QueueId?: string | undefined;
  Attributes?: Record<string, string> | undefined;
  Campaign?: Campaign | undefined;
}
export interface BatchPutContactRequest {
  ClientToken?: string | undefined;
  InstanceId: string | undefined;
  ContactDataRequestList: ContactDataRequest[] | undefined;
}
export declare const FailureReasonCode: {
  readonly IDEMPOTENCY_EXCEPTION: "IDEMPOTENCY_EXCEPTION";
  readonly INTERNAL_ERROR: "INTERNAL_ERROR";
  readonly INVALID_ATTRIBUTE_KEY: "INVALID_ATTRIBUTE_KEY";
  readonly INVALID_CUSTOMER_ENDPOINT: "INVALID_CUSTOMER_ENDPOINT";
  readonly INVALID_QUEUE: "INVALID_QUEUE";
  readonly INVALID_SYSTEM_ENDPOINT: "INVALID_SYSTEM_ENDPOINT";
  readonly MISSING_CAMPAIGN: "MISSING_CAMPAIGN";
  readonly MISSING_CUSTOMER_ENDPOINT: "MISSING_CUSTOMER_ENDPOINT";
  readonly MISSING_QUEUE_ID_AND_SYSTEM_ENDPOINT: "MISSING_QUEUE_ID_AND_SYSTEM_ENDPOINT";
  readonly REQUEST_THROTTLED: "REQUEST_THROTTLED";
};
export type FailureReasonCode =
  (typeof FailureReasonCode)[keyof typeof FailureReasonCode];
export interface FailedRequest {
  RequestIdentifier?: string | undefined;
  FailureReasonCode?: FailureReasonCode | undefined;
  FailureReasonMessage?: string | undefined;
}
export interface SuccessfulRequest {
  RequestIdentifier?: string | undefined;
  ContactId?: string | undefined;
}
export interface BatchPutContactResponse {
  SuccessfulRequestList?: SuccessfulRequest[] | undefined;
  FailedRequestList?: FailedRequest[] | undefined;
}
export declare class IdempotencyException extends __BaseException {
  readonly name: "IdempotencyException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<IdempotencyException, __BaseException>
  );
}
export interface ClaimPhoneNumberRequest {
  TargetArn?: string | undefined;
  InstanceId?: string | undefined;
  PhoneNumber: string | undefined;
  PhoneNumberDescription?: string | undefined;
  Tags?: Record<string, string> | undefined;
  ClientToken?: string | undefined;
}
export interface ClaimPhoneNumberResponse {
  PhoneNumberId?: string | undefined;
  PhoneNumberArn?: string | undefined;
}
export interface CompleteAttachedFileUploadRequest {
  InstanceId: string | undefined;
  FileId: string | undefined;
  AssociatedResourceArn: string | undefined;
}
export interface CompleteAttachedFileUploadResponse {}
export interface CreateAgentStatusRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  State: AgentStatusState | undefined;
  DisplayOrder?: number | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateAgentStatusResponse {
  AgentStatusARN?: string | undefined;
  AgentStatusId?: string | undefined;
}
export declare class DuplicateResourceException extends __BaseException {
  readonly name: "DuplicateResourceException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DuplicateResourceException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare const InitiateAs: {
  readonly CONNECTED_TO_USER: "CONNECTED_TO_USER";
};
export type InitiateAs = (typeof InitiateAs)[keyof typeof InitiateAs];
export declare const ReferenceStatus: {
  readonly APPROVED: "APPROVED";
  readonly AVAILABLE: "AVAILABLE";
  readonly DELETED: "DELETED";
  readonly FAILED: "FAILED";
  readonly PROCESSING: "PROCESSING";
  readonly REJECTED: "REJECTED";
};
export type ReferenceStatus =
  (typeof ReferenceStatus)[keyof typeof ReferenceStatus];
export declare const ReferenceType: {
  readonly ATTACHMENT: "ATTACHMENT";
  readonly CONTACT_ANALYSIS: "CONTACT_ANALYSIS";
  readonly DATE: "DATE";
  readonly EMAIL: "EMAIL";
  readonly EMAIL_MESSAGE: "EMAIL_MESSAGE";
  readonly NUMBER: "NUMBER";
  readonly STRING: "STRING";
  readonly URL: "URL";
};
export type ReferenceType = (typeof ReferenceType)[keyof typeof ReferenceType];
export interface Reference {
  Value?: string | undefined;
  Type: ReferenceType | undefined;
  Status?: ReferenceStatus | undefined;
  Arn?: string | undefined;
  StatusReason?: string | undefined;
}
export interface UserInfo {
  UserId?: string | undefined;
}
export interface CreateContactResponse {
  ContactId?: string | undefined;
  ContactArn?: string | undefined;
}
export declare const ContactFlowStatus: {
  readonly PUBLISHED: "PUBLISHED";
  readonly SAVED: "SAVED";
};
export type ContactFlowStatus =
  (typeof ContactFlowStatus)[keyof typeof ContactFlowStatus];
export declare const ContactFlowType: {
  readonly AGENT_HOLD: "AGENT_HOLD";
  readonly AGENT_TRANSFER: "AGENT_TRANSFER";
  readonly AGENT_WHISPER: "AGENT_WHISPER";
  readonly CAMPAIGN: "CAMPAIGN";
  readonly CONTACT_FLOW: "CONTACT_FLOW";
  readonly CUSTOMER_HOLD: "CUSTOMER_HOLD";
  readonly CUSTOMER_QUEUE: "CUSTOMER_QUEUE";
  readonly CUSTOMER_WHISPER: "CUSTOMER_WHISPER";
  readonly OUTBOUND_WHISPER: "OUTBOUND_WHISPER";
  readonly QUEUE_TRANSFER: "QUEUE_TRANSFER";
};
export type ContactFlowType =
  (typeof ContactFlowType)[keyof typeof ContactFlowType];
export interface CreateContactFlowRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Type: ContactFlowType | undefined;
  Description?: string | undefined;
  Content: string | undefined;
  Status?: ContactFlowStatus | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateContactFlowResponse {
  ContactFlowId?: string | undefined;
  ContactFlowArn?: string | undefined;
  FlowContentSha256?: string | undefined;
}
export interface ProblemDetail {
  message?: string | undefined;
}
export declare class InvalidContactFlowException extends __BaseException {
  readonly name: "InvalidContactFlowException";
  readonly $fault: "client";
  problems?: ProblemDetail[] | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidContactFlowException, __BaseException>
  );
}
export interface CreateContactFlowModuleRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  Content: string | undefined;
  Tags?: Record<string, string> | undefined;
  ClientToken?: string | undefined;
}
export interface CreateContactFlowModuleResponse {
  Id?: string | undefined;
  Arn?: string | undefined;
}
export declare class InvalidContactFlowModuleException extends __BaseException {
  readonly name: "InvalidContactFlowModuleException";
  readonly $fault: "client";
  Problems?: ProblemDetail[] | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidContactFlowModuleException,
      __BaseException
    >
  );
}
export interface CreateContactFlowVersionRequest {
  InstanceId: string | undefined;
  Description?: string | undefined;
  ContactFlowId: string | undefined;
  FlowContentSha256?: string | undefined;
  ContactFlowVersion?: number | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface CreateContactFlowVersionResponse {
  ContactFlowArn?: string | undefined;
  Version?: number | undefined;
}
export interface CreateEmailAddressRequest {
  Description?: string | undefined;
  InstanceId: string | undefined;
  EmailAddress: string | undefined;
  DisplayName?: string | undefined;
  Tags?: Record<string, string> | undefined;
  ClientToken?: string | undefined;
}
export interface CreateEmailAddressResponse {
  EmailAddressId?: string | undefined;
  EmailAddressArn?: string | undefined;
}
export declare const EvaluationFormQuestionType: {
  readonly NUMERIC: "NUMERIC";
  readonly SINGLESELECT: "SINGLESELECT";
  readonly TEXT: "TEXT";
};
export type EvaluationFormQuestionType =
  (typeof EvaluationFormQuestionType)[keyof typeof EvaluationFormQuestionType];
export declare const NumericQuestionPropertyAutomationLabel: {
  readonly AGENT_INTERACTION_DURATION: "AGENT_INTERACTION_DURATION";
  readonly CONTACT_DURATION: "CONTACT_DURATION";
  readonly CUSTOMER_HOLD_TIME: "CUSTOMER_HOLD_TIME";
  readonly NON_TALK_TIME: "NON_TALK_TIME";
  readonly NON_TALK_TIME_PERCENTAGE: "NON_TALK_TIME_PERCENTAGE";
  readonly NUMBER_OF_INTERRUPTIONS: "NUMBER_OF_INTERRUPTIONS";
  readonly OVERALL_AGENT_SENTIMENT_SCORE: "OVERALL_AGENT_SENTIMENT_SCORE";
  readonly OVERALL_CUSTOMER_SENTIMENT_SCORE: "OVERALL_CUSTOMER_SENTIMENT_SCORE";
};
export type NumericQuestionPropertyAutomationLabel =
  (typeof NumericQuestionPropertyAutomationLabel)[keyof typeof NumericQuestionPropertyAutomationLabel];
export interface NumericQuestionPropertyValueAutomation {
  Label: NumericQuestionPropertyAutomationLabel | undefined;
}
export type EvaluationFormNumericQuestionAutomation =
  | EvaluationFormNumericQuestionAutomation.PropertyValueMember
  | EvaluationFormNumericQuestionAutomation.$UnknownMember;
export declare namespace EvaluationFormNumericQuestionAutomation {
  interface PropertyValueMember {
    PropertyValue: NumericQuestionPropertyValueAutomation;
    $unknown?: never;
  }
  interface $UnknownMember {
    PropertyValue?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    PropertyValue: (value: NumericQuestionPropertyValueAutomation) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: EvaluationFormNumericQuestionAutomation,
    visitor: Visitor<T>
  ) => T;
}
export interface EvaluationFormNumericQuestionOption {
  MinValue: number | undefined;
  MaxValue: number | undefined;
  Score?: number | undefined;
  AutomaticFail?: boolean | undefined;
}
export interface EvaluationFormNumericQuestionProperties {
  MinValue: number | undefined;
  MaxValue: number | undefined;
  Options?: EvaluationFormNumericQuestionOption[] | undefined;
  Automation?: EvaluationFormNumericQuestionAutomation | undefined;
}
export declare const SingleSelectQuestionRuleCategoryAutomationCondition: {
  readonly NOT_PRESENT: "NOT_PRESENT";
  readonly PRESENT: "PRESENT";
};
export type SingleSelectQuestionRuleCategoryAutomationCondition =
  (typeof SingleSelectQuestionRuleCategoryAutomationCondition)[keyof typeof SingleSelectQuestionRuleCategoryAutomationCondition];
export interface SingleSelectQuestionRuleCategoryAutomation {
  Category: string | undefined;
  Condition: SingleSelectQuestionRuleCategoryAutomationCondition | undefined;
  OptionRefId: string | undefined;
}
export type EvaluationFormSingleSelectQuestionAutomationOption =
  | EvaluationFormSingleSelectQuestionAutomationOption.RuleCategoryMember
  | EvaluationFormSingleSelectQuestionAutomationOption.$UnknownMember;
export declare namespace EvaluationFormSingleSelectQuestionAutomationOption {
  interface RuleCategoryMember {
    RuleCategory: SingleSelectQuestionRuleCategoryAutomation;
    $unknown?: never;
  }
  interface $UnknownMember {
    RuleCategory?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    RuleCategory: (value: SingleSelectQuestionRuleCategoryAutomation) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: EvaluationFormSingleSelectQuestionAutomationOption,
    visitor: Visitor<T>
  ) => T;
}
export interface EvaluationFormSingleSelectQuestionAutomation {
  Options: EvaluationFormSingleSelectQuestionAutomationOption[] | undefined;
  DefaultOptionRefId?: string | undefined;
}
export declare const EvaluationFormSingleSelectQuestionDisplayMode: {
  readonly DROPDOWN: "DROPDOWN";
  readonly RADIO: "RADIO";
};
export type EvaluationFormSingleSelectQuestionDisplayMode =
  (typeof EvaluationFormSingleSelectQuestionDisplayMode)[keyof typeof EvaluationFormSingleSelectQuestionDisplayMode];
export interface EvaluationFormSingleSelectQuestionOption {
  RefId: string | undefined;
  Text: string | undefined;
  Score?: number | undefined;
  AutomaticFail?: boolean | undefined;
}
export interface EvaluationFormSingleSelectQuestionProperties {
  Options: EvaluationFormSingleSelectQuestionOption[] | undefined;
  DisplayAs?: EvaluationFormSingleSelectQuestionDisplayMode | undefined;
  Automation?: EvaluationFormSingleSelectQuestionAutomation | undefined;
}
export type EvaluationFormQuestionTypeProperties =
  | EvaluationFormQuestionTypeProperties.NumericMember
  | EvaluationFormQuestionTypeProperties.SingleSelectMember
  | EvaluationFormQuestionTypeProperties.$UnknownMember;
export declare namespace EvaluationFormQuestionTypeProperties {
  interface NumericMember {
    Numeric: EvaluationFormNumericQuestionProperties;
    SingleSelect?: never;
    $unknown?: never;
  }
  interface SingleSelectMember {
    Numeric?: never;
    SingleSelect: EvaluationFormSingleSelectQuestionProperties;
    $unknown?: never;
  }
  interface $UnknownMember {
    Numeric?: never;
    SingleSelect?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Numeric: (value: EvaluationFormNumericQuestionProperties) => T;
    SingleSelect: (value: EvaluationFormSingleSelectQuestionProperties) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: EvaluationFormQuestionTypeProperties,
    visitor: Visitor<T>
  ) => T;
}
export interface EvaluationFormQuestion {
  Title: string | undefined;
  Instructions?: string | undefined;
  RefId: string | undefined;
  NotApplicableEnabled?: boolean | undefined;
  QuestionType: EvaluationFormQuestionType | undefined;
  QuestionTypeProperties?: EvaluationFormQuestionTypeProperties | undefined;
  Weight?: number | undefined;
}
export declare const EvaluationFormScoringMode: {
  readonly QUESTION_ONLY: "QUESTION_ONLY";
  readonly SECTION_ONLY: "SECTION_ONLY";
};
export type EvaluationFormScoringMode =
  (typeof EvaluationFormScoringMode)[keyof typeof EvaluationFormScoringMode];
export declare const EvaluationFormScoringStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type EvaluationFormScoringStatus =
  (typeof EvaluationFormScoringStatus)[keyof typeof EvaluationFormScoringStatus];
export interface EvaluationFormScoringStrategy {
  Mode: EvaluationFormScoringMode | undefined;
  Status: EvaluationFormScoringStatus | undefined;
}
export interface CreateEvaluationFormResponse {
  EvaluationFormId: string | undefined;
  EvaluationFormArn: string | undefined;
}
export declare const HoursOfOperationDays: {
  readonly FRIDAY: "FRIDAY";
  readonly MONDAY: "MONDAY";
  readonly SATURDAY: "SATURDAY";
  readonly SUNDAY: "SUNDAY";
  readonly THURSDAY: "THURSDAY";
  readonly TUESDAY: "TUESDAY";
  readonly WEDNESDAY: "WEDNESDAY";
};
export type HoursOfOperationDays =
  (typeof HoursOfOperationDays)[keyof typeof HoursOfOperationDays];
export interface HoursOfOperationTimeSlice {
  Hours: number | undefined;
  Minutes: number | undefined;
}
export interface HoursOfOperationConfig {
  Day: HoursOfOperationDays | undefined;
  StartTime: HoursOfOperationTimeSlice | undefined;
  EndTime: HoursOfOperationTimeSlice | undefined;
}
export interface CreateHoursOfOperationRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  TimeZone: string | undefined;
  Config: HoursOfOperationConfig[] | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateHoursOfOperationResponse {
  HoursOfOperationId?: string | undefined;
  HoursOfOperationArn?: string | undefined;
}
export declare const OverrideDays: {
  readonly FRIDAY: "FRIDAY";
  readonly MONDAY: "MONDAY";
  readonly SATURDAY: "SATURDAY";
  readonly SUNDAY: "SUNDAY";
  readonly THURSDAY: "THURSDAY";
  readonly TUESDAY: "TUESDAY";
  readonly WEDNESDAY: "WEDNESDAY";
};
export type OverrideDays = (typeof OverrideDays)[keyof typeof OverrideDays];
export interface OverrideTimeSlice {
  Hours: number | undefined;
  Minutes: number | undefined;
}
export interface HoursOfOperationOverrideConfig {
  Day?: OverrideDays | undefined;
  StartTime?: OverrideTimeSlice | undefined;
  EndTime?: OverrideTimeSlice | undefined;
}
export interface CreateHoursOfOperationOverrideRequest {
  InstanceId: string | undefined;
  HoursOfOperationId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  Config: HoursOfOperationOverrideConfig[] | undefined;
  EffectiveFrom: string | undefined;
  EffectiveTill: string | undefined;
}
export interface CreateHoursOfOperationOverrideResponse {
  HoursOfOperationOverrideId?: string | undefined;
}
export declare const DirectoryType: {
  readonly CONNECT_MANAGED: "CONNECT_MANAGED";
  readonly EXISTING_DIRECTORY: "EXISTING_DIRECTORY";
  readonly SAML: "SAML";
};
export type DirectoryType = (typeof DirectoryType)[keyof typeof DirectoryType];
export interface CreateInstanceRequest {
  ClientToken?: string | undefined;
  IdentityManagementType: DirectoryType | undefined;
  InstanceAlias?: string | undefined;
  DirectoryId?: string | undefined;
  InboundCallsEnabled: boolean | undefined;
  OutboundCallsEnabled: boolean | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateInstanceResponse {
  Id?: string | undefined;
  Arn?: string | undefined;
}
export declare const IntegrationType: {
  readonly ANALYTICS_CONNECTOR: "ANALYTICS_CONNECTOR";
  readonly APPLICATION: "APPLICATION";
  readonly CALL_TRANSFER_CONNECTOR: "CALL_TRANSFER_CONNECTOR";
  readonly CASES_DOMAIN: "CASES_DOMAIN";
  readonly COGNITO_USER_POOL: "COGNITO_USER_POOL";
  readonly EVENT: "EVENT";
  readonly FILE_SCANNER: "FILE_SCANNER";
  readonly PINPOINT_APP: "PINPOINT_APP";
  readonly Q_MESSAGE_TEMPLATES: "Q_MESSAGE_TEMPLATES";
  readonly SES_IDENTITY: "SES_IDENTITY";
  readonly VOICE_ID: "VOICE_ID";
  readonly WISDOM_ASSISTANT: "WISDOM_ASSISTANT";
  readonly WISDOM_KNOWLEDGE_BASE: "WISDOM_KNOWLEDGE_BASE";
  readonly WISDOM_QUICK_RESPONSES: "WISDOM_QUICK_RESPONSES";
};
export type IntegrationType =
  (typeof IntegrationType)[keyof typeof IntegrationType];
export declare const SourceType: {
  readonly CASES: "CASES";
  readonly SALESFORCE: "SALESFORCE";
  readonly ZENDESK: "ZENDESK";
};
export type SourceType = (typeof SourceType)[keyof typeof SourceType];
export interface CreateIntegrationAssociationRequest {
  InstanceId: string | undefined;
  IntegrationType: IntegrationType | undefined;
  IntegrationArn: string | undefined;
  SourceApplicationUrl?: string | undefined;
  SourceApplicationName?: string | undefined;
  SourceType?: SourceType | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateIntegrationAssociationResponse {
  IntegrationAssociationId?: string | undefined;
  IntegrationAssociationArn?: string | undefined;
}
export declare const ParticipantRole: {
  readonly AGENT: "AGENT";
  readonly CUSTOMER: "CUSTOMER";
  readonly CUSTOM_BOT: "CUSTOM_BOT";
  readonly SUPERVISOR: "SUPERVISOR";
  readonly SYSTEM: "SYSTEM";
};
export type ParticipantRole =
  (typeof ParticipantRole)[keyof typeof ParticipantRole];
export interface ParticipantDetailsToAdd {
  ParticipantRole?: ParticipantRole | undefined;
  DisplayName?: string | undefined;
}
export interface CreateParticipantRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ClientToken?: string | undefined;
  ParticipantDetails: ParticipantDetailsToAdd | undefined;
}
export interface ParticipantTokenCredentials {
  ParticipantToken?: string | undefined;
  Expiry?: string | undefined;
}
export interface CreateParticipantResponse {
  ParticipantCredentials?: ParticipantTokenCredentials | undefined;
  ParticipantId?: string | undefined;
}
export declare const RehydrationType: {
  readonly ENTIRE_PAST_SESSION: "ENTIRE_PAST_SESSION";
  readonly FROM_SEGMENT: "FROM_SEGMENT";
};
export type RehydrationType =
  (typeof RehydrationType)[keyof typeof RehydrationType];
export interface CreatePersistentContactAssociationRequest {
  InstanceId: string | undefined;
  InitialContactId: string | undefined;
  RehydrationType: RehydrationType | undefined;
  SourceContactId: string | undefined;
  ClientToken?: string | undefined;
}
export interface CreatePersistentContactAssociationResponse {
  ContinuedFromContactId?: string | undefined;
}
export type PredefinedAttributeValues =
  | PredefinedAttributeValues.StringListMember
  | PredefinedAttributeValues.$UnknownMember;
export declare namespace PredefinedAttributeValues {
  interface StringListMember {
    StringList: string[];
    $unknown?: never;
  }
  interface $UnknownMember {
    StringList?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    StringList: (value: string[]) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: PredefinedAttributeValues, visitor: Visitor<T>) => T;
}
export interface CreatePredefinedAttributeRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Values: PredefinedAttributeValues | undefined;
}
export interface CreatePromptRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  S3Uri: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreatePromptResponse {
  PromptARN?: string | undefined;
  PromptId?: string | undefined;
}
export interface ContactConfiguration {
  ContactId: string | undefined;
  ParticipantRole?: ParticipantRole | undefined;
  IncludeRawMessage?: boolean | undefined;
}
export declare const DeviceType: {
  readonly APNS: "APNS";
  readonly APNS_SANDBOX: "APNS_SANDBOX";
  readonly GCM: "GCM";
};
export type DeviceType = (typeof DeviceType)[keyof typeof DeviceType];
export interface CreatePushNotificationRegistrationRequest {
  InstanceId: string | undefined;
  ClientToken?: string | undefined;
  PinpointAppArn: string | undefined;
  DeviceToken: string | undefined;
  DeviceType: DeviceType | undefined;
  ContactConfiguration: ContactConfiguration | undefined;
}
export interface CreatePushNotificationRegistrationResponse {
  RegistrationId: string | undefined;
}
export interface OutboundCallerConfig {
  OutboundCallerIdName?: string | undefined;
  OutboundCallerIdNumberId?: string | undefined;
  OutboundFlowId?: string | undefined;
}
export interface OutboundEmailConfig {
  OutboundEmailAddressId?: string | undefined;
}
export interface CreateQueueRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  OutboundCallerConfig?: OutboundCallerConfig | undefined;
  OutboundEmailConfig?: OutboundEmailConfig | undefined;
  HoursOfOperationId: string | undefined;
  MaxContacts?: number | undefined;
  QuickConnectIds?: string[] | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateQueueResponse {
  QueueArn?: string | undefined;
  QueueId?: string | undefined;
}
export interface PhoneNumberQuickConnectConfig {
  PhoneNumber: string | undefined;
}
export interface QueueQuickConnectConfig {
  QueueId: string | undefined;
  ContactFlowId: string | undefined;
}
export declare const QuickConnectType: {
  readonly PHONE_NUMBER: "PHONE_NUMBER";
  readonly QUEUE: "QUEUE";
  readonly USER: "USER";
};
export type QuickConnectType =
  (typeof QuickConnectType)[keyof typeof QuickConnectType];
export interface UserQuickConnectConfig {
  UserId: string | undefined;
  ContactFlowId: string | undefined;
}
export interface QuickConnectConfig {
  QuickConnectType: QuickConnectType | undefined;
  UserConfig?: UserQuickConnectConfig | undefined;
  QueueConfig?: QueueQuickConnectConfig | undefined;
  PhoneConfig?: PhoneNumberQuickConnectConfig | undefined;
}
export interface CreateQuickConnectRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  QuickConnectConfig: QuickConnectConfig | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateQuickConnectResponse {
  QuickConnectARN?: string | undefined;
  QuickConnectId?: string | undefined;
}
export declare const BehaviorType: {
  readonly ROUTE_ANY_CHANNEL: "ROUTE_ANY_CHANNEL";
  readonly ROUTE_CURRENT_CHANNEL_ONLY: "ROUTE_CURRENT_CHANNEL_ONLY";
};
export type BehaviorType = (typeof BehaviorType)[keyof typeof BehaviorType];
export interface CrossChannelBehavior {
  BehaviorType: BehaviorType | undefined;
}
export interface MediaConcurrency {
  Channel: Channel | undefined;
  Concurrency: number | undefined;
  CrossChannelBehavior?: CrossChannelBehavior | undefined;
}
export interface CreateRoutingProfileRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description: string | undefined;
  DefaultOutboundQueueId: string | undefined;
  QueueConfigs?: RoutingProfileQueueConfig[] | undefined;
  MediaConcurrencies: MediaConcurrency[] | undefined;
  Tags?: Record<string, string> | undefined;
  AgentAvailabilityTimer?: AgentAvailabilityTimer | undefined;
}
export interface CreateRoutingProfileResponse {
  RoutingProfileArn?: string | undefined;
  RoutingProfileId?: string | undefined;
}
export interface AssignContactCategoryActionDefinition {}
export interface EmptyFieldValue {}
export interface FieldValueUnion {
  BooleanValue?: boolean | undefined;
  DoubleValue?: number | undefined;
  EmptyValue?: EmptyFieldValue | undefined;
  StringValue?: string | undefined;
}
export declare const SlaType: {
  readonly CASE_FIELD: "CaseField";
};
export type SlaType = (typeof SlaType)[keyof typeof SlaType];
export interface CaseSlaConfiguration {
  Name: string | undefined;
  Type: SlaType | undefined;
  FieldId?: string | undefined;
  TargetFieldValues?: FieldValueUnion[] | undefined;
  TargetSlaMinutes: number | undefined;
}
export declare const SlaAssignmentType: {
  readonly CASES: "CASES";
};
export type SlaAssignmentType =
  (typeof SlaAssignmentType)[keyof typeof SlaAssignmentType];
export interface AssignSlaActionDefinition {
  SlaAssignmentType: SlaAssignmentType | undefined;
  CaseSlaConfiguration?: CaseSlaConfiguration | undefined;
}
export interface FieldValue {
  Id: string | undefined;
  Value: FieldValueUnion | undefined;
}
export interface CreateCaseActionDefinition {
  Fields: FieldValue[] | undefined;
  TemplateId: string | undefined;
}
export interface EndAssociatedTasksActionDefinition {}
export interface EventBridgeActionDefinition {
  Name: string | undefined;
}
export declare const NotificationContentType: {
  readonly PLAIN_TEXT: "PLAIN_TEXT";
};
export type NotificationContentType =
  (typeof NotificationContentType)[keyof typeof NotificationContentType];
export declare const NotificationDeliveryType: {
  readonly EMAIL: "EMAIL";
};
export type NotificationDeliveryType =
  (typeof NotificationDeliveryType)[keyof typeof NotificationDeliveryType];
export interface NotificationRecipientType {
  UserTags?: Record<string, string> | undefined;
  UserIds?: string[] | undefined;
}
export interface SendNotificationActionDefinition {
  DeliveryMethod: NotificationDeliveryType | undefined;
  Subject?: string | undefined;
  Content: string | undefined;
  ContentType: NotificationContentType | undefined;
  Recipient: NotificationRecipientType | undefined;
}
export interface SubmitAutoEvaluationActionDefinition {
  EvaluationFormId: string | undefined;
}
export interface TaskActionDefinition {
  Name: string | undefined;
  Description?: string | undefined;
  ContactFlowId: string | undefined;
  References?: Record<string, Reference> | undefined;
}
export interface UpdateCaseActionDefinition {
  Fields: FieldValue[] | undefined;
}
export interface RuleAction {
  ActionType: ActionType | undefined;
  TaskAction?: TaskActionDefinition | undefined;
  EventBridgeAction?: EventBridgeActionDefinition | undefined;
  AssignContactCategoryAction?:
    | AssignContactCategoryActionDefinition
    | undefined;
  SendNotificationAction?: SendNotificationActionDefinition | undefined;
  CreateCaseAction?: CreateCaseActionDefinition | undefined;
  UpdateCaseAction?: UpdateCaseActionDefinition | undefined;
  AssignSlaAction?: AssignSlaActionDefinition | undefined;
  EndAssociatedTasksAction?: EndAssociatedTasksActionDefinition | undefined;
  SubmitAutoEvaluationAction?: SubmitAutoEvaluationActionDefinition | undefined;
}
export declare const RulePublishStatus: {
  readonly DRAFT: "DRAFT";
  readonly PUBLISHED: "PUBLISHED";
};
export type RulePublishStatus =
  (typeof RulePublishStatus)[keyof typeof RulePublishStatus];
export declare const EventSourceName: {
  readonly OnCaseCreate: "OnCaseCreate";
  readonly OnCaseUpdate: "OnCaseUpdate";
  readonly OnContactEvaluationSubmit: "OnContactEvaluationSubmit";
  readonly OnMetricDataUpdate: "OnMetricDataUpdate";
  readonly OnPostCallAnalysisAvailable: "OnPostCallAnalysisAvailable";
  readonly OnPostChatAnalysisAvailable: "OnPostChatAnalysisAvailable";
  readonly OnRealTimeCallAnalysisAvailable: "OnRealTimeCallAnalysisAvailable";
  readonly OnRealTimeChatAnalysisAvailable: "OnRealTimeChatAnalysisAvailable";
  readonly OnSalesforceCaseCreate: "OnSalesforceCaseCreate";
  readonly OnSlaBreach: "OnSlaBreach";
  readonly OnZendeskTicketCreate: "OnZendeskTicketCreate";
  readonly OnZendeskTicketStatusUpdate: "OnZendeskTicketStatusUpdate";
};
export type EventSourceName =
  (typeof EventSourceName)[keyof typeof EventSourceName];
export interface RuleTriggerEventSource {
  EventSourceName: EventSourceName | undefined;
  IntegrationAssociationId?: string | undefined;
}
export interface CreateRuleRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  TriggerEventSource: RuleTriggerEventSource | undefined;
  Function: string | undefined;
  Actions: RuleAction[] | undefined;
  PublishStatus: RulePublishStatus | undefined;
  ClientToken?: string | undefined;
}
export interface CreateRuleResponse {
  RuleArn: string | undefined;
  RuleId: string | undefined;
}
export interface Application {
  Namespace?: string | undefined;
  ApplicationPermissions?: string[] | undefined;
}
export interface CreateSecurityProfileRequest {
  SecurityProfileName: string | undefined;
  Description?: string | undefined;
  Permissions?: string[] | undefined;
  InstanceId: string | undefined;
  Tags?: Record<string, string> | undefined;
  AllowedAccessControlTags?: Record<string, string> | undefined;
  TagRestrictedResources?: string[] | undefined;
  Applications?: Application[] | undefined;
  HierarchyRestrictedResources?: string[] | undefined;
  AllowedAccessControlHierarchyGroupId?: string | undefined;
}
export interface CreateSecurityProfileResponse {
  SecurityProfileId?: string | undefined;
  SecurityProfileArn?: string | undefined;
}
export interface TaskTemplateFieldIdentifier {
  Name?: string | undefined;
}
export interface InvisibleFieldInfo {
  Id?: TaskTemplateFieldIdentifier | undefined;
}
export interface ReadOnlyFieldInfo {
  Id?: TaskTemplateFieldIdentifier | undefined;
}
export interface RequiredFieldInfo {
  Id?: TaskTemplateFieldIdentifier | undefined;
}
export interface TaskTemplateConstraints {
  RequiredFields?: RequiredFieldInfo[] | undefined;
  ReadOnlyFields?: ReadOnlyFieldInfo[] | undefined;
  InvisibleFields?: InvisibleFieldInfo[] | undefined;
}
export interface TaskTemplateDefaultFieldValue {
  Id?: TaskTemplateFieldIdentifier | undefined;
  DefaultValue?: string | undefined;
}
export interface TaskTemplateDefaults {
  DefaultFieldValues?: TaskTemplateDefaultFieldValue[] | undefined;
}
export declare const TaskTemplateFieldType: {
  readonly BOOLEAN: "BOOLEAN";
  readonly DATE_TIME: "DATE_TIME";
  readonly DESCRIPTION: "DESCRIPTION";
  readonly EMAIL: "EMAIL";
  readonly EXPIRY_DURATION: "EXPIRY_DURATION";
  readonly NAME: "NAME";
  readonly NUMBER: "NUMBER";
  readonly QUICK_CONNECT: "QUICK_CONNECT";
  readonly SCHEDULED_TIME: "SCHEDULED_TIME";
  readonly SELF_ASSIGN: "SELF_ASSIGN";
  readonly SINGLE_SELECT: "SINGLE_SELECT";
  readonly TEXT: "TEXT";
  readonly TEXT_AREA: "TEXT_AREA";
  readonly URL: "URL";
};
export type TaskTemplateFieldType =
  (typeof TaskTemplateFieldType)[keyof typeof TaskTemplateFieldType];
export interface TaskTemplateField {
  Id: TaskTemplateFieldIdentifier | undefined;
  Description?: string | undefined;
  Type?: TaskTemplateFieldType | undefined;
  SingleSelectOptions?: string[] | undefined;
}
export declare const TaskTemplateStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly INACTIVE: "INACTIVE";
};
export type TaskTemplateStatus =
  (typeof TaskTemplateStatus)[keyof typeof TaskTemplateStatus];
export interface CreateTaskTemplateRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  ContactFlowId?: string | undefined;
  SelfAssignFlowId?: string | undefined;
  Constraints?: TaskTemplateConstraints | undefined;
  Defaults?: TaskTemplateDefaults | undefined;
  Status?: TaskTemplateStatus | undefined;
  Fields: TaskTemplateField[] | undefined;
  ClientToken?: string | undefined;
}
export interface CreateTaskTemplateResponse {
  Id: string | undefined;
  Arn: string | undefined;
}
export declare const PropertyValidationExceptionReason: {
  readonly INVALID_FORMAT: "INVALID_FORMAT";
  readonly NOT_SUPPORTED: "NOT_SUPPORTED";
  readonly REFERENCED_RESOURCE_NOT_FOUND: "REFERENCED_RESOURCE_NOT_FOUND";
  readonly REQUIRED_PROPERTY_MISSING: "REQUIRED_PROPERTY_MISSING";
  readonly RESOURCE_NAME_ALREADY_EXISTS: "RESOURCE_NAME_ALREADY_EXISTS";
  readonly UNIQUE_CONSTRAINT_VIOLATED: "UNIQUE_CONSTRAINT_VIOLATED";
};
export type PropertyValidationExceptionReason =
  (typeof PropertyValidationExceptionReason)[keyof typeof PropertyValidationExceptionReason];
export interface PropertyValidationExceptionProperty {
  PropertyPath: string | undefined;
  Reason: PropertyValidationExceptionReason | undefined;
  Message: string | undefined;
}
export declare class PropertyValidationException extends __BaseException {
  readonly name: "PropertyValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  PropertyList?: PropertyValidationExceptionProperty[] | undefined;
  constructor(
    opts: __ExceptionOptionType<PropertyValidationException, __BaseException>
  );
}
export interface CreateTrafficDistributionGroupRequest {
  Name: string | undefined;
  Description?: string | undefined;
  InstanceId: string | undefined;
  ClientToken?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateTrafficDistributionGroupResponse {
  Id?: string | undefined;
  Arn?: string | undefined;
}
export declare class ResourceNotReadyException extends __BaseException {
  readonly name: "ResourceNotReadyException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotReadyException, __BaseException>
  );
}
export declare const UseCaseType: {
  readonly CONNECT_CAMPAIGNS: "CONNECT_CAMPAIGNS";
  readonly RULES_EVALUATION: "RULES_EVALUATION";
};
export type UseCaseType = (typeof UseCaseType)[keyof typeof UseCaseType];
export interface CreateUseCaseRequest {
  InstanceId: string | undefined;
  IntegrationAssociationId: string | undefined;
  UseCaseType: UseCaseType | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateUseCaseResponse {
  UseCaseId?: string | undefined;
  UseCaseArn?: string | undefined;
}
export interface UserIdentityInfo {
  FirstName?: string | undefined;
  LastName?: string | undefined;
  Email?: string | undefined;
  SecondaryEmail?: string | undefined;
  Mobile?: string | undefined;
}
export declare const PhoneType: {
  readonly DESK_PHONE: "DESK_PHONE";
  readonly SOFT_PHONE: "SOFT_PHONE";
};
export type PhoneType = (typeof PhoneType)[keyof typeof PhoneType];
export interface UserPhoneConfig {
  PhoneType: PhoneType | undefined;
  AutoAccept?: boolean | undefined;
  AfterContactWorkTimeLimit?: number | undefined;
  DeskPhoneNumber?: string | undefined;
}
export interface CreateUserRequest {
  Username: string | undefined;
  Password?: string | undefined;
  IdentityInfo?: UserIdentityInfo | undefined;
  PhoneConfig: UserPhoneConfig | undefined;
  DirectoryUserId?: string | undefined;
  SecurityProfileIds: string[] | undefined;
  RoutingProfileId: string | undefined;
  HierarchyGroupId?: string | undefined;
  InstanceId: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateUserResponse {
  UserId?: string | undefined;
  UserArn?: string | undefined;
}
export interface CreateUserHierarchyGroupRequest {
  Name: string | undefined;
  ParentGroupId?: string | undefined;
  InstanceId: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateUserHierarchyGroupResponse {
  HierarchyGroupId?: string | undefined;
  HierarchyGroupArn?: string | undefined;
}
export interface ViewInputContent {
  Template?: string | undefined;
  Actions?: string[] | undefined;
}
export declare const ViewStatus: {
  readonly PUBLISHED: "PUBLISHED";
  readonly SAVED: "SAVED";
};
export type ViewStatus = (typeof ViewStatus)[keyof typeof ViewStatus];
export interface CreateViewRequest {
  InstanceId: string | undefined;
  ClientToken?: string | undefined;
  Status: ViewStatus | undefined;
  Content: ViewInputContent | undefined;
  Description?: string | undefined;
  Name: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface ViewContent {
  InputSchema?: string | undefined;
  Template?: string | undefined;
  Actions?: string[] | undefined;
}
export declare const ViewType: {
  readonly AWS_MANAGED: "AWS_MANAGED";
  readonly CUSTOMER_MANAGED: "CUSTOMER_MANAGED";
};
export type ViewType = (typeof ViewType)[keyof typeof ViewType];
export interface View {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  Status?: ViewStatus | undefined;
  Type?: ViewType | undefined;
  Description?: string | undefined;
  Version?: number | undefined;
  VersionDescription?: string | undefined;
  Content?: ViewContent | undefined;
  Tags?: Record<string, string> | undefined;
  CreatedTime?: Date | undefined;
  LastModifiedTime?: Date | undefined;
  ViewContentSha256?: string | undefined;
}
export interface CreateViewResponse {
  View?: View | undefined;
}
export declare const ResourceType: {
  readonly CONTACT: "CONTACT";
  readonly CONTACT_FLOW: "CONTACT_FLOW";
  readonly HIERARCHY_GROUP: "HIERARCHY_GROUP";
  readonly HIERARCHY_LEVEL: "HIERARCHY_LEVEL";
  readonly INSTANCE: "INSTANCE";
  readonly PARTICIPANT: "PARTICIPANT";
  readonly PHONE_NUMBER: "PHONE_NUMBER";
  readonly USER: "USER";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  Message?: string | undefined;
  ResourceType?: ResourceType | undefined;
  ResourceId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface CreateViewVersionRequest {
  InstanceId: string | undefined;
  ViewId: string | undefined;
  VersionDescription?: string | undefined;
  ViewContentSha256?: string | undefined;
}
export interface CreateViewVersionResponse {
  View?: View | undefined;
}
export interface CreateVocabularyRequest {
  ClientToken?: string | undefined;
  InstanceId: string | undefined;
  VocabularyName: string | undefined;
  LanguageCode: VocabularyLanguageCode | undefined;
  Content: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export declare const VocabularyState: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATION_FAILED: "CREATION_FAILED";
  readonly CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS";
  readonly DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS";
};
export type VocabularyState =
  (typeof VocabularyState)[keyof typeof VocabularyState];
export interface CreateVocabularyResponse {
  VocabularyArn: string | undefined;
  VocabularyId: string | undefined;
  State: VocabularyState | undefined;
}
export interface DeactivateEvaluationFormRequest {
  InstanceId: string | undefined;
  EvaluationFormId: string | undefined;
  EvaluationFormVersion: number | undefined;
}
export interface DeactivateEvaluationFormResponse {
  EvaluationFormId: string | undefined;
  EvaluationFormArn: string | undefined;
  EvaluationFormVersion: number | undefined;
}
export interface DeleteAttachedFileRequest {
  InstanceId: string | undefined;
  FileId: string | undefined;
  AssociatedResourceArn: string | undefined;
}
export interface DeleteAttachedFileResponse {}
export interface DeleteContactEvaluationRequest {
  InstanceId: string | undefined;
  EvaluationId: string | undefined;
}
export interface DeleteContactFlowRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
}
export interface DeleteContactFlowResponse {}
export interface DeleteContactFlowModuleRequest {
  InstanceId: string | undefined;
  ContactFlowModuleId: string | undefined;
}
export interface DeleteContactFlowModuleResponse {}
export interface DeleteContactFlowVersionRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  ContactFlowVersion: number | undefined;
}
export interface DeleteContactFlowVersionResponse {}
export interface DeleteEmailAddressRequest {
  InstanceId: string | undefined;
  EmailAddressId: string | undefined;
}
export interface DeleteEmailAddressResponse {}
export interface DeleteEvaluationFormRequest {
  InstanceId: string | undefined;
  EvaluationFormId: string | undefined;
  EvaluationFormVersion?: number | undefined;
}
export interface DeleteHoursOfOperationRequest {
  InstanceId: string | undefined;
  HoursOfOperationId: string | undefined;
}
export interface DeleteHoursOfOperationOverrideRequest {
  InstanceId: string | undefined;
  HoursOfOperationId: string | undefined;
  HoursOfOperationOverrideId: string | undefined;
}
export interface DeleteInstanceRequest {
  InstanceId: string | undefined;
  ClientToken?: string | undefined;
}
export interface DeleteIntegrationAssociationRequest {
  InstanceId: string | undefined;
  IntegrationAssociationId: string | undefined;
}
export interface DeletePredefinedAttributeRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
}
export interface DeletePromptRequest {
  InstanceId: string | undefined;
  PromptId: string | undefined;
}
export interface DeletePushNotificationRegistrationRequest {
  InstanceId: string | undefined;
  RegistrationId: string | undefined;
  ContactId: string | undefined;
}
export declare const CreateEmailAddressRequestFilterSensitiveLog: (
  obj: CreateEmailAddressRequest
) => any;
export declare const CreateInstanceRequestFilterSensitiveLog: (
  obj: CreateInstanceRequest
) => any;
export declare const UserIdentityInfoFilterSensitiveLog: (
  obj: UserIdentityInfo
) => any;
export declare const CreateUserRequestFilterSensitiveLog: (
  obj: CreateUserRequest
) => any;
export declare const ViewInputContentFilterSensitiveLog: (
  obj: ViewInputContent
) => any;
export declare const CreateViewRequestFilterSensitiveLog: (
  obj: CreateViewRequest
) => any;
export declare const ViewContentFilterSensitiveLog: (obj: ViewContent) => any;
export declare const ViewFilterSensitiveLog: (obj: View) => any;
export declare const CreateViewResponseFilterSensitiveLog: (
  obj: CreateViewResponse
) => any;
export declare const CreateViewVersionResponseFilterSensitiveLog: (
  obj: CreateViewVersionResponse
) => any;
