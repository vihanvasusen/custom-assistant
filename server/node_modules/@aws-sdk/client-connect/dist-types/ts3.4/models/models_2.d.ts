import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ConnectServiceException as __BaseException } from "./ConnectServiceException";
import {
  ActionSummary,
  AgentHierarchyGroups,
  AgentStatus,
  AgentStatusState,
  AllowedCapabilities,
  Application,
  Channel,
  ContactInitiationMethod,
  ControlPlaneAttributeFilter,
  CreatedByInfo,
  EventSourceName,
  FileStatusType,
  FileUseCaseType,
  HoursOfOperationConfig,
  HoursOfOperationOverrideConfig,
  InstanceStorageConfig,
  InstanceStorageResourceType,
  MonitorCapability,
  OutboundCallerConfig,
  ParticipantRole,
  PredefinedAttributeValues,
  QuickConnectType,
  Reference,
  RehydrationType,
  RulePublishStatus,
  StringComparisonType,
  StringCondition,
  TagCondition,
  TaskTemplateStatus,
  UseCaseType,
  UserPhoneConfig,
  UserProficiency,
  ViewStatus,
  ViewType,
  VocabularyLanguageCode,
  VocabularyState,
} from "./models_0";
import {
  ContactFlow,
  ContactFlowModule,
  ContactFlowModuleState,
  ContactFlowState,
  EvaluationAnswerData,
  EvaluationNote,
  HierarchyGroup,
  HierarchyGroupSummary,
  HoursOfOperation,
  HoursOfOperationOverride,
  InstanceAttributeType,
  PhoneNumberCountryCode,
  PhoneNumberType,
  PredefinedAttribute,
  Prompt,
  Queue,
  QuickConnect,
  RoutingProfile,
  SortOrder,
  TrafficDistributionGroupStatus,
} from "./models_1";
export interface QuickConnectSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  QuickConnectType?: QuickConnectType | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListQueueQuickConnectsResponse {
  NextToken?: string | undefined;
  QuickConnectSummaryList?: QuickConnectSummary[] | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export declare const QueueType: {
  readonly AGENT: "AGENT";
  readonly STANDARD: "STANDARD";
};
export type QueueType = (typeof QueueType)[keyof typeof QueueType];
export interface ListQueuesRequest {
  InstanceId: string | undefined;
  QueueTypes?: QueueType[] | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface QueueSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  QueueType?: QueueType | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListQueuesResponse {
  QueueSummaryList?: QueueSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListQuickConnectsRequest {
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  QuickConnectTypes?: QuickConnectType[] | undefined;
}
export interface ListQuickConnectsResponse {
  QuickConnectSummaryList?: QuickConnectSummary[] | undefined;
  NextToken?: string | undefined;
}
export declare const RealTimeContactAnalysisOutputType: {
  readonly Raw: "Raw";
  readonly Redacted: "Redacted";
};
export type RealTimeContactAnalysisOutputType =
  (typeof RealTimeContactAnalysisOutputType)[keyof typeof RealTimeContactAnalysisOutputType];
export declare const RealTimeContactAnalysisSegmentType: {
  readonly Attachments: "Attachments";
  readonly Categories: "Categories";
  readonly Event: "Event";
  readonly Issues: "Issues";
  readonly PostContactSummary: "PostContactSummary";
  readonly Transcript: "Transcript";
};
export type RealTimeContactAnalysisSegmentType =
  (typeof RealTimeContactAnalysisSegmentType)[keyof typeof RealTimeContactAnalysisSegmentType];
export interface ListRealtimeContactAnalysisSegmentsV2Request {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  OutputType: RealTimeContactAnalysisOutputType | undefined;
  SegmentTypes: RealTimeContactAnalysisSegmentType[] | undefined;
}
export declare const RealTimeContactAnalysisSupportedChannel: {
  readonly CHAT: "CHAT";
  readonly VOICE: "VOICE";
};
export type RealTimeContactAnalysisSupportedChannel =
  (typeof RealTimeContactAnalysisSupportedChannel)[keyof typeof RealTimeContactAnalysisSupportedChannel];
export declare const ArtifactStatus: {
  readonly APPROVED: "APPROVED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly REJECTED: "REJECTED";
};
export type ArtifactStatus =
  (typeof ArtifactStatus)[keyof typeof ArtifactStatus];
export interface RealTimeContactAnalysisAttachment {
  AttachmentName: string | undefined;
  ContentType?: string | undefined;
  AttachmentId: string | undefined;
  Status?: ArtifactStatus | undefined;
}
export type RealTimeContactAnalysisTimeData =
  | RealTimeContactAnalysisTimeData.AbsoluteTimeMember
  | RealTimeContactAnalysisTimeData.$UnknownMember;
export declare namespace RealTimeContactAnalysisTimeData {
  interface AbsoluteTimeMember {
    AbsoluteTime: Date;
    $unknown?: never;
  }
  interface $UnknownMember {
    AbsoluteTime?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    AbsoluteTime: (value: Date) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: RealTimeContactAnalysisTimeData,
    visitor: Visitor<T>
  ) => T;
}
export interface RealTimeContactAnalysisSegmentAttachments {
  Id: string | undefined;
  ParticipantId: string | undefined;
  ParticipantRole: ParticipantRole | undefined;
  DisplayName?: string | undefined;
  Attachments: RealTimeContactAnalysisAttachment[] | undefined;
  Time: RealTimeContactAnalysisTimeData | undefined;
}
export interface RealTimeContactAnalysisCharacterInterval {
  BeginOffsetChar: number | undefined;
  EndOffsetChar: number | undefined;
}
export interface RealTimeContactAnalysisTranscriptItemWithCharacterOffsets {
  Id: string | undefined;
  CharacterOffsets?: RealTimeContactAnalysisCharacterInterval | undefined;
}
export interface RealTimeContactAnalysisPointOfInterest {
  TranscriptItems?:
    | RealTimeContactAnalysisTranscriptItemWithCharacterOffsets[]
    | undefined;
}
export interface RealTimeContactAnalysisCategoryDetails {
  PointsOfInterest: RealTimeContactAnalysisPointOfInterest[] | undefined;
}
export interface RealTimeContactAnalysisSegmentCategories {
  MatchedDetails:
    | Record<string, RealTimeContactAnalysisCategoryDetails>
    | undefined;
}
export interface RealTimeContactAnalysisSegmentEvent {
  Id: string | undefined;
  ParticipantId?: string | undefined;
  ParticipantRole?: ParticipantRole | undefined;
  DisplayName?: string | undefined;
  EventType: string | undefined;
  Time: RealTimeContactAnalysisTimeData | undefined;
}
export interface RealTimeContactAnalysisTranscriptItemWithContent {
  Content?: string | undefined;
  Id: string | undefined;
  CharacterOffsets?: RealTimeContactAnalysisCharacterInterval | undefined;
}
export interface RealTimeContactAnalysisIssueDetected {
  TranscriptItems:
    | RealTimeContactAnalysisTranscriptItemWithContent[]
    | undefined;
}
export interface RealTimeContactAnalysisSegmentIssues {
  IssuesDetected: RealTimeContactAnalysisIssueDetected[] | undefined;
}
export declare const RealTimeContactAnalysisPostContactSummaryFailureCode: {
  readonly FAILED_SAFETY_GUIDELINES: "FAILED_SAFETY_GUIDELINES";
  readonly INSUFFICIENT_CONVERSATION_CONTENT: "INSUFFICIENT_CONVERSATION_CONTENT";
  readonly INTERNAL_ERROR: "INTERNAL_ERROR";
  readonly INVALID_ANALYSIS_CONFIGURATION: "INVALID_ANALYSIS_CONFIGURATION";
  readonly QUOTA_EXCEEDED: "QUOTA_EXCEEDED";
};
export type RealTimeContactAnalysisPostContactSummaryFailureCode =
  (typeof RealTimeContactAnalysisPostContactSummaryFailureCode)[keyof typeof RealTimeContactAnalysisPostContactSummaryFailureCode];
export declare const RealTimeContactAnalysisPostContactSummaryStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
};
export type RealTimeContactAnalysisPostContactSummaryStatus =
  (typeof RealTimeContactAnalysisPostContactSummaryStatus)[keyof typeof RealTimeContactAnalysisPostContactSummaryStatus];
export interface RealTimeContactAnalysisSegmentPostContactSummary {
  Content?: string | undefined;
  Status: RealTimeContactAnalysisPostContactSummaryStatus | undefined;
  FailureCode?:
    | RealTimeContactAnalysisPostContactSummaryFailureCode
    | undefined;
}
export interface RealTimeContactAnalysisTranscriptItemRedaction {
  CharacterOffsets?: RealTimeContactAnalysisCharacterInterval[] | undefined;
}
export declare const RealTimeContactAnalysisSentimentLabel: {
  readonly NEGATIVE: "NEGATIVE";
  readonly NEUTRAL: "NEUTRAL";
  readonly POSITIVE: "POSITIVE";
};
export type RealTimeContactAnalysisSentimentLabel =
  (typeof RealTimeContactAnalysisSentimentLabel)[keyof typeof RealTimeContactAnalysisSentimentLabel];
export interface RealTimeContactAnalysisSegmentTranscript {
  Id: string | undefined;
  ParticipantId: string | undefined;
  ParticipantRole: ParticipantRole | undefined;
  DisplayName?: string | undefined;
  Content: string | undefined;
  ContentType?: string | undefined;
  Time: RealTimeContactAnalysisTimeData | undefined;
  Redaction?: RealTimeContactAnalysisTranscriptItemRedaction | undefined;
  Sentiment?: RealTimeContactAnalysisSentimentLabel | undefined;
}
export type RealtimeContactAnalysisSegment =
  | RealtimeContactAnalysisSegment.AttachmentsMember
  | RealtimeContactAnalysisSegment.CategoriesMember
  | RealtimeContactAnalysisSegment.EventMember
  | RealtimeContactAnalysisSegment.IssuesMember
  | RealtimeContactAnalysisSegment.PostContactSummaryMember
  | RealtimeContactAnalysisSegment.TranscriptMember
  | RealtimeContactAnalysisSegment.$UnknownMember;
export declare namespace RealtimeContactAnalysisSegment {
  interface TranscriptMember {
    Transcript: RealTimeContactAnalysisSegmentTranscript;
    Categories?: never;
    Issues?: never;
    Event?: never;
    Attachments?: never;
    PostContactSummary?: never;
    $unknown?: never;
  }
  interface CategoriesMember {
    Transcript?: never;
    Categories: RealTimeContactAnalysisSegmentCategories;
    Issues?: never;
    Event?: never;
    Attachments?: never;
    PostContactSummary?: never;
    $unknown?: never;
  }
  interface IssuesMember {
    Transcript?: never;
    Categories?: never;
    Issues: RealTimeContactAnalysisSegmentIssues;
    Event?: never;
    Attachments?: never;
    PostContactSummary?: never;
    $unknown?: never;
  }
  interface EventMember {
    Transcript?: never;
    Categories?: never;
    Issues?: never;
    Event: RealTimeContactAnalysisSegmentEvent;
    Attachments?: never;
    PostContactSummary?: never;
    $unknown?: never;
  }
  interface AttachmentsMember {
    Transcript?: never;
    Categories?: never;
    Issues?: never;
    Event?: never;
    Attachments: RealTimeContactAnalysisSegmentAttachments;
    PostContactSummary?: never;
    $unknown?: never;
  }
  interface PostContactSummaryMember {
    Transcript?: never;
    Categories?: never;
    Issues?: never;
    Event?: never;
    Attachments?: never;
    PostContactSummary: RealTimeContactAnalysisSegmentPostContactSummary;
    $unknown?: never;
  }
  interface $UnknownMember {
    Transcript?: never;
    Categories?: never;
    Issues?: never;
    Event?: never;
    Attachments?: never;
    PostContactSummary?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Transcript: (value: RealTimeContactAnalysisSegmentTranscript) => T;
    Categories: (value: RealTimeContactAnalysisSegmentCategories) => T;
    Issues: (value: RealTimeContactAnalysisSegmentIssues) => T;
    Event: (value: RealTimeContactAnalysisSegmentEvent) => T;
    Attachments: (value: RealTimeContactAnalysisSegmentAttachments) => T;
    PostContactSummary: (
      value: RealTimeContactAnalysisSegmentPostContactSummary
    ) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: RealtimeContactAnalysisSegment,
    visitor: Visitor<T>
  ) => T;
}
export declare const RealTimeContactAnalysisStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type RealTimeContactAnalysisStatus =
  (typeof RealTimeContactAnalysisStatus)[keyof typeof RealTimeContactAnalysisStatus];
export interface ListRealtimeContactAnalysisSegmentsV2Response {
  Channel: RealTimeContactAnalysisSupportedChannel | undefined;
  Status: RealTimeContactAnalysisStatus | undefined;
  Segments: RealtimeContactAnalysisSegment[] | undefined;
  NextToken?: string | undefined;
}
export declare class OutputTypeNotFoundException extends __BaseException {
  readonly name: "OutputTypeNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<OutputTypeNotFoundException, __BaseException>
  );
}
export interface ListRoutingProfileQueuesRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface RoutingProfileQueueConfigSummary {
  QueueId: string | undefined;
  QueueArn: string | undefined;
  QueueName: string | undefined;
  Priority: number | undefined;
  Delay: number | undefined;
  Channel: Channel | undefined;
}
export interface ListRoutingProfileQueuesResponse {
  NextToken?: string | undefined;
  RoutingProfileQueueConfigSummaryList?:
    | RoutingProfileQueueConfigSummary[]
    | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListRoutingProfilesRequest {
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface RoutingProfileSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListRoutingProfilesResponse {
  RoutingProfileSummaryList?: RoutingProfileSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListRulesRequest {
  InstanceId: string | undefined;
  PublishStatus?: RulePublishStatus | undefined;
  EventSourceName?: EventSourceName | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface RuleSummary {
  Name: string | undefined;
  RuleId: string | undefined;
  RuleArn: string | undefined;
  EventSourceName: EventSourceName | undefined;
  PublishStatus: RulePublishStatus | undefined;
  ActionSummaries: ActionSummary[] | undefined;
  CreatedTime: Date | undefined;
  LastUpdatedTime: Date | undefined;
}
export interface ListRulesResponse {
  RuleSummaryList: RuleSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListSecurityKeysRequest {
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface SecurityKey {
  AssociationId?: string | undefined;
  Key?: string | undefined;
  CreationTime?: Date | undefined;
}
export interface ListSecurityKeysResponse {
  SecurityKeys?: SecurityKey[] | undefined;
  NextToken?: string | undefined;
}
export interface ListSecurityProfileApplicationsRequest {
  SecurityProfileId: string | undefined;
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListSecurityProfileApplicationsResponse {
  Applications?: Application[] | undefined;
  NextToken?: string | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListSecurityProfilePermissionsRequest {
  SecurityProfileId: string | undefined;
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListSecurityProfilePermissionsResponse {
  Permissions?: string[] | undefined;
  NextToken?: string | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListSecurityProfilesRequest {
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface SecurityProfileSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListSecurityProfilesResponse {
  SecurityProfileSummaryList?: SecurityProfileSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string> | undefined;
}
export interface ListTaskTemplatesRequest {
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  Status?: TaskTemplateStatus | undefined;
  Name?: string | undefined;
}
export interface TaskTemplateMetadata {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  Status?: TaskTemplateStatus | undefined;
  LastModifiedTime?: Date | undefined;
  CreatedTime?: Date | undefined;
}
export interface ListTaskTemplatesResponse {
  TaskTemplates?: TaskTemplateMetadata[] | undefined;
  NextToken?: string | undefined;
}
export interface ListTrafficDistributionGroupsRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  InstanceId?: string | undefined;
}
export interface TrafficDistributionGroupSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  InstanceArn?: string | undefined;
  Status?: TrafficDistributionGroupStatus | undefined;
  IsDefault?: boolean | undefined;
}
export interface ListTrafficDistributionGroupsResponse {
  NextToken?: string | undefined;
  TrafficDistributionGroupSummaryList?:
    | TrafficDistributionGroupSummary[]
    | undefined;
}
export interface ListTrafficDistributionGroupUsersRequest {
  TrafficDistributionGroupId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface TrafficDistributionGroupUserSummary {
  UserId?: string | undefined;
}
export interface ListTrafficDistributionGroupUsersResponse {
  NextToken?: string | undefined;
  TrafficDistributionGroupUserSummaryList?:
    | TrafficDistributionGroupUserSummary[]
    | undefined;
}
export interface ListUseCasesRequest {
  InstanceId: string | undefined;
  IntegrationAssociationId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface UseCase {
  UseCaseId?: string | undefined;
  UseCaseArn?: string | undefined;
  UseCaseType?: UseCaseType | undefined;
}
export interface ListUseCasesResponse {
  UseCaseSummaryList?: UseCase[] | undefined;
  NextToken?: string | undefined;
}
export interface ListUserHierarchyGroupsRequest {
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListUserHierarchyGroupsResponse {
  UserHierarchyGroupSummaryList?: HierarchyGroupSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListUserProficienciesRequest {
  InstanceId: string | undefined;
  UserId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListUserProficienciesResponse {
  NextToken?: string | undefined;
  UserProficiencyList?: UserProficiency[] | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListUsersRequest {
  InstanceId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface UserSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Username?: string | undefined;
  LastModifiedTime?: Date | undefined;
  LastModifiedRegion?: string | undefined;
}
export interface ListUsersResponse {
  UserSummaryList?: UserSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListViewsRequest {
  InstanceId: string | undefined;
  Type?: ViewType | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ViewSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  Type?: ViewType | undefined;
  Status?: ViewStatus | undefined;
  Description?: string | undefined;
}
export interface ListViewsResponse {
  ViewsSummaryList?: ViewSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListViewVersionsRequest {
  InstanceId: string | undefined;
  ViewId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ViewVersionSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  Description?: string | undefined;
  Name?: string | undefined;
  Type?: ViewType | undefined;
  Version?: number | undefined;
  VersionDescription?: string | undefined;
}
export interface ListViewVersionsResponse {
  ViewVersionSummaryList?: ViewVersionSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface MonitorContactRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  UserId: string | undefined;
  AllowedMonitorCapabilities?: MonitorCapability[] | undefined;
  ClientToken?: string | undefined;
}
export interface MonitorContactResponse {
  ContactId?: string | undefined;
  ContactArn?: string | undefined;
}
export interface PauseContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  ContactFlowId?: string | undefined;
}
export interface PauseContactResponse {}
export interface PutUserStatusRequest {
  UserId: string | undefined;
  InstanceId: string | undefined;
  AgentStatusId: string | undefined;
}
export interface PutUserStatusResponse {}
export interface ReleasePhoneNumberRequest {
  PhoneNumberId: string | undefined;
  ClientToken?: string | undefined;
}
export interface ReplicateInstanceRequest {
  InstanceId: string | undefined;
  ReplicaRegion: string | undefined;
  ClientToken?: string | undefined;
  ReplicaAlias: string | undefined;
}
export interface ReplicateInstanceResponse {
  Id?: string | undefined;
  Arn?: string | undefined;
}
export interface ResumeContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  ContactFlowId?: string | undefined;
}
export interface ResumeContactResponse {}
export declare const ContactRecordingType: {
  readonly AGENT: "AGENT";
  readonly IVR: "IVR";
  readonly SCREEN: "SCREEN";
};
export type ContactRecordingType =
  (typeof ContactRecordingType)[keyof typeof ContactRecordingType];
export interface ResumeContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
  ContactRecordingType?: ContactRecordingType | undefined;
}
export interface ResumeContactRecordingResponse {}
export interface SearchAgentStatusesResponse {
  AgentStatuses?: AgentStatus[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface SearchAvailablePhoneNumbersRequest {
  TargetArn?: string | undefined;
  InstanceId?: string | undefined;
  PhoneNumberCountryCode: PhoneNumberCountryCode | undefined;
  PhoneNumberType: PhoneNumberType | undefined;
  PhoneNumberPrefix?: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface AvailableNumberSummary {
  PhoneNumber?: string | undefined;
  PhoneNumberCountryCode?: PhoneNumberCountryCode | undefined;
  PhoneNumberType?: PhoneNumberType | undefined;
}
export interface SearchAvailablePhoneNumbersResponse {
  NextToken?: string | undefined;
  AvailableNumbersList?: AvailableNumberSummary[] | undefined;
}
export interface ControlPlaneTagFilter {
  OrConditions?: TagCondition[][] | undefined;
  AndConditions?: TagCondition[] | undefined;
  TagCondition?: TagCondition | undefined;
}
export interface ContactFlowModuleSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SearchContactFlowModulesResponse {
  ContactFlowModules?: ContactFlowModule[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface ContactFlowSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SearchContactFlowsResponse {
  ContactFlows?: ContactFlow[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export declare const SearchContactsMatchType: {
  readonly MATCH_ALL: "MATCH_ALL";
  readonly MATCH_ANY: "MATCH_ANY";
};
export type SearchContactsMatchType =
  (typeof SearchContactsMatchType)[keyof typeof SearchContactsMatchType];
export interface TranscriptCriteria {
  ParticipantRole: ParticipantRole | undefined;
  SearchText: string[] | undefined;
  MatchType: SearchContactsMatchType | undefined;
}
export interface Transcript {
  Criteria: TranscriptCriteria[] | undefined;
  MatchType?: SearchContactsMatchType | undefined;
}
export interface ContactAnalysis {
  Transcript?: Transcript | undefined;
}
export interface SearchableContactAttributesCriteria {
  Key: string | undefined;
  Values: string[] | undefined;
}
export interface SearchableContactAttributes {
  Criteria: SearchableContactAttributesCriteria[] | undefined;
  MatchType?: SearchContactsMatchType | undefined;
}
export interface SearchableSegmentAttributesCriteria {
  Key: string | undefined;
  Values: string[] | undefined;
}
export interface SearchableSegmentAttributes {
  Criteria: SearchableSegmentAttributesCriteria[] | undefined;
  MatchType?: SearchContactsMatchType | undefined;
}
export interface SearchCriteria {
  AgentIds?: string[] | undefined;
  AgentHierarchyGroups?: AgentHierarchyGroups | undefined;
  Channels?: Channel[] | undefined;
  ContactAnalysis?: ContactAnalysis | undefined;
  InitiationMethods?: ContactInitiationMethod[] | undefined;
  QueueIds?: string[] | undefined;
  SearchableContactAttributes?: SearchableContactAttributes | undefined;
  SearchableSegmentAttributes?: SearchableSegmentAttributes | undefined;
}
export declare const SortableFieldName: {
  readonly CHANNEL: "CHANNEL";
  readonly CONNECTED_TO_AGENT_TIMESTAMP: "CONNECTED_TO_AGENT_TIMESTAMP";
  readonly DISCONNECT_TIMESTAMP: "DISCONNECT_TIMESTAMP";
  readonly INITIATION_METHOD: "INITIATION_METHOD";
  readonly INITIATION_TIMESTAMP: "INITIATION_TIMESTAMP";
  readonly SCHEDULED_TIMESTAMP: "SCHEDULED_TIMESTAMP";
};
export type SortableFieldName =
  (typeof SortableFieldName)[keyof typeof SortableFieldName];
export interface Sort {
  FieldName: SortableFieldName | undefined;
  Order: SortOrder | undefined;
}
export declare const SearchContactsTimeRangeType: {
  readonly CONNECTED_TO_AGENT_TIMESTAMP: "CONNECTED_TO_AGENT_TIMESTAMP";
  readonly DISCONNECT_TIMESTAMP: "DISCONNECT_TIMESTAMP";
  readonly INITIATION_TIMESTAMP: "INITIATION_TIMESTAMP";
  readonly SCHEDULED_TIMESTAMP: "SCHEDULED_TIMESTAMP";
};
export type SearchContactsTimeRangeType =
  (typeof SearchContactsTimeRangeType)[keyof typeof SearchContactsTimeRangeType];
export interface SearchContactsTimeRange {
  Type: SearchContactsTimeRangeType | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export interface SearchContactsRequest {
  InstanceId: string | undefined;
  TimeRange: SearchContactsTimeRange | undefined;
  SearchCriteria?: SearchCriteria | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  Sort?: Sort | undefined;
}
export interface ContactSearchSummaryAgentInfo {
  Id?: string | undefined;
  ConnectedToAgentTimestamp?: Date | undefined;
}
export interface ContactSearchSummaryQueueInfo {
  Id?: string | undefined;
  EnqueueTimestamp?: Date | undefined;
}
export interface ContactSearchSummarySegmentAttributeValue {
  ValueString?: string | undefined;
}
export interface ContactSearchSummary {
  Arn?: string | undefined;
  Id?: string | undefined;
  InitialContactId?: string | undefined;
  PreviousContactId?: string | undefined;
  InitiationMethod?: ContactInitiationMethod | undefined;
  Channel?: Channel | undefined;
  QueueInfo?: ContactSearchSummaryQueueInfo | undefined;
  AgentInfo?: ContactSearchSummaryAgentInfo | undefined;
  InitiationTimestamp?: Date | undefined;
  DisconnectTimestamp?: Date | undefined;
  ScheduledTimestamp?: Date | undefined;
  SegmentAttributes?:
    | Record<string, ContactSearchSummarySegmentAttributeValue>
    | undefined;
}
export interface SearchContactsResponse {
  Contacts: ContactSearchSummary[] | undefined;
  NextToken?: string | undefined;
  TotalCount?: number | undefined;
}
export interface EmailAddressSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface EmailAddressMetadata {
  EmailAddressId?: string | undefined;
  EmailAddressArn?: string | undefined;
  EmailAddress?: string | undefined;
  Description?: string | undefined;
  DisplayName?: string | undefined;
}
export interface SearchEmailAddressesResponse {
  NextToken?: string | undefined;
  EmailAddresses?: EmailAddressMetadata[] | undefined;
  ApproximateTotalCount?: number | undefined;
}
export declare const DateComparisonType: {
  readonly EQUAL_TO: "EQUAL_TO";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO";
  readonly LESS_THAN: "LESS_THAN";
  readonly LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO";
};
export type DateComparisonType =
  (typeof DateComparisonType)[keyof typeof DateComparisonType];
export interface DateCondition {
  FieldName?: string | undefined;
  Value?: string | undefined;
  ComparisonType?: DateComparisonType | undefined;
}
export interface HoursOfOperationSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SearchHoursOfOperationOverridesResponse {
  HoursOfOperationOverrides?: HoursOfOperationOverride[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface SearchHoursOfOperationsResponse {
  HoursOfOperations?: HoursOfOperation[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface SearchPredefinedAttributesResponse {
  PredefinedAttributes?: PredefinedAttribute[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface PromptSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SearchPromptsResponse {
  Prompts?: Prompt[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export declare const SearchableQueueType: {
  readonly STANDARD: "STANDARD";
};
export type SearchableQueueType =
  (typeof SearchableQueueType)[keyof typeof SearchableQueueType];
export interface QueueSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SearchQueuesResponse {
  Queues?: Queue[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface QuickConnectSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SearchQuickConnectsResponse {
  QuickConnects?: QuickConnect[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export declare class MaximumResultReturnedException extends __BaseException {
  readonly name: "MaximumResultReturnedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<MaximumResultReturnedException, __BaseException>
  );
}
export interface TagSearchCondition {
  tagKey?: string | undefined;
  tagValue?: string | undefined;
  tagKeyComparisonType?: StringComparisonType | undefined;
  tagValueComparisonType?: StringComparisonType | undefined;
}
export interface ResourceTagsSearchCriteria {
  TagSearchCondition?: TagSearchCondition | undefined;
}
export interface SearchResourceTagsRequest {
  InstanceId: string | undefined;
  ResourceTypes?: string[] | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  SearchCriteria?: ResourceTagsSearchCriteria | undefined;
}
export interface TagSet {
  key?: string | undefined;
  value?: string | undefined;
}
export interface SearchResourceTagsResponse {
  Tags?: TagSet[] | undefined;
  NextToken?: string | undefined;
}
export interface RoutingProfileSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SearchRoutingProfilesResponse {
  RoutingProfiles?: RoutingProfile[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface SecurityProfilesSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
}
export interface SecurityProfileSearchSummary {
  Id?: string | undefined;
  OrganizationResourceId?: string | undefined;
  Arn?: string | undefined;
  SecurityProfileName?: string | undefined;
  Description?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface SearchSecurityProfilesResponse {
  SecurityProfiles?: SecurityProfileSearchSummary[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface UserHierarchyGroupSearchFilter {
  AttributeFilter?: ControlPlaneAttributeFilter | undefined;
}
export interface SearchUserHierarchyGroupsResponse {
  UserHierarchyGroups?: HierarchyGroup[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export declare const HierarchyGroupMatchType: {
  readonly EXACT: "EXACT";
  readonly WITH_CHILD_GROUPS: "WITH_CHILD_GROUPS";
};
export type HierarchyGroupMatchType =
  (typeof HierarchyGroupMatchType)[keyof typeof HierarchyGroupMatchType];
export interface HierarchyGroupCondition {
  Value?: string | undefined;
  HierarchyGroupMatchType?: HierarchyGroupMatchType | undefined;
}
export declare const NumberComparisonType: {
  readonly EQUAL: "EQUAL";
  readonly GREATER: "GREATER";
  readonly GREATER_OR_EQUAL: "GREATER_OR_EQUAL";
  readonly LESSER: "LESSER";
  readonly LESSER_OR_EQUAL: "LESSER_OR_EQUAL";
  readonly NOT_EQUAL: "NOT_EQUAL";
  readonly RANGE: "RANGE";
};
export type NumberComparisonType =
  (typeof NumberComparisonType)[keyof typeof NumberComparisonType];
export interface NumberCondition {
  FieldName?: string | undefined;
  MinValue?: number | undefined;
  MaxValue?: number | undefined;
  ComparisonType?: NumberComparisonType | undefined;
}
export interface Condition {
  StringCondition?: StringCondition | undefined;
  NumberCondition?: NumberCondition | undefined;
}
export declare const TargetListType: {
  readonly PROFICIENCIES: "PROFICIENCIES";
};
export type TargetListType =
  (typeof TargetListType)[keyof typeof TargetListType];
export interface ListCondition {
  TargetListType?: TargetListType | undefined;
  Conditions?: Condition[] | undefined;
}
export interface AttributeAndCondition {
  TagConditions?: TagCondition[] | undefined;
  HierarchyGroupCondition?: HierarchyGroupCondition | undefined;
}
export interface ControlPlaneUserAttributeFilter {
  OrConditions?: AttributeAndCondition[] | undefined;
  AndCondition?: AttributeAndCondition | undefined;
  TagCondition?: TagCondition | undefined;
  HierarchyGroupCondition?: HierarchyGroupCondition | undefined;
}
export interface UserSearchFilter {
  TagFilter?: ControlPlaneTagFilter | undefined;
  UserAttributeFilter?: ControlPlaneUserAttributeFilter | undefined;
}
export interface UserIdentityInfoLite {
  FirstName?: string | undefined;
  LastName?: string | undefined;
}
export interface UserSearchSummary {
  Arn?: string | undefined;
  DirectoryUserId?: string | undefined;
  HierarchyGroupId?: string | undefined;
  Id?: string | undefined;
  IdentityInfo?: UserIdentityInfoLite | undefined;
  PhoneConfig?: UserPhoneConfig | undefined;
  RoutingProfileId?: string | undefined;
  SecurityProfileIds?: string[] | undefined;
  Tags?: Record<string, string> | undefined;
  Username?: string | undefined;
}
export interface SearchUsersResponse {
  Users?: UserSearchSummary[] | undefined;
  NextToken?: string | undefined;
  ApproximateTotalCount?: number | undefined;
}
export interface SearchVocabulariesRequest {
  InstanceId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  State?: VocabularyState | undefined;
  NameStartsWith?: string | undefined;
  LanguageCode?: VocabularyLanguageCode | undefined;
}
export interface VocabularySummary {
  Name: string | undefined;
  Id: string | undefined;
  Arn: string | undefined;
  LanguageCode: VocabularyLanguageCode | undefined;
  State: VocabularyState | undefined;
  LastModifiedTime: Date | undefined;
  FailureReason?: string | undefined;
}
export interface SearchVocabulariesResponse {
  VocabularySummaryList?: VocabularySummary[] | undefined;
  NextToken?: string | undefined;
}
export declare const ChatEventType: {
  readonly DISCONNECT: "DISCONNECT";
  readonly EVENT: "EVENT";
  readonly MESSAGE: "MESSAGE";
};
export type ChatEventType = (typeof ChatEventType)[keyof typeof ChatEventType];
export interface ChatEvent {
  Type: ChatEventType | undefined;
  ContentType?: string | undefined;
  Content?: string | undefined;
}
export interface ParticipantDetails {
  DisplayName: string | undefined;
}
export interface ChatStreamingConfiguration {
  StreamingEndpointArn: string | undefined;
}
export interface NewSessionDetails {
  SupportedMessagingContentTypes?: string[] | undefined;
  ParticipantDetails?: ParticipantDetails | undefined;
  Attributes?: Record<string, string> | undefined;
  StreamingConfiguration?: ChatStreamingConfiguration | undefined;
}
export interface SendChatIntegrationEventRequest {
  SourceId: string | undefined;
  DestinationId: string | undefined;
  Subtype?: string | undefined;
  Event: ChatEvent | undefined;
  NewSessionDetails?: NewSessionDetails | undefined;
}
export interface SendChatIntegrationEventResponse {
  InitialContactId?: string | undefined;
  NewChatCreated?: boolean | undefined;
}
export interface EmailAddressInfo {
  EmailAddress: string | undefined;
  DisplayName?: string | undefined;
}
export interface OutboundAdditionalRecipients {
  CcEmailAddresses?: EmailAddressInfo[] | undefined;
}
export declare const OutboundMessageSourceType: {
  readonly RAW: "RAW";
  readonly TEMPLATE: "TEMPLATE";
};
export type OutboundMessageSourceType =
  (typeof OutboundMessageSourceType)[keyof typeof OutboundMessageSourceType];
export interface OutboundRawMessage {
  Subject: string | undefined;
  Body: string | undefined;
  ContentType: string | undefined;
}
export interface TemplateAttributes {
  CustomAttributes?: Record<string, string> | undefined;
  CustomerProfileAttributes?: string | undefined;
}
export interface TemplatedMessageConfig {
  KnowledgeBaseId: string | undefined;
  MessageTemplateId: string | undefined;
  TemplateAttributes: TemplateAttributes | undefined;
}
export interface OutboundEmailContent {
  MessageSourceType: OutboundMessageSourceType | undefined;
  TemplatedMessageConfig?: TemplatedMessageConfig | undefined;
  RawMessage?: OutboundRawMessage | undefined;
}
export interface SourceCampaign {
  CampaignId?: string | undefined;
  OutboundRequestId?: string | undefined;
}
export declare const TrafficType: {
  readonly CAMPAIGN: "CAMPAIGN";
  readonly GENERAL: "GENERAL";
};
export type TrafficType = (typeof TrafficType)[keyof typeof TrafficType];
export interface SendOutboundEmailRequest {
  InstanceId: string | undefined;
  FromEmailAddress: EmailAddressInfo | undefined;
  DestinationEmailAddress: EmailAddressInfo | undefined;
  AdditionalRecipients?: OutboundAdditionalRecipients | undefined;
  EmailMessage: OutboundEmailContent | undefined;
  TrafficType: TrafficType | undefined;
  SourceCampaign?: SourceCampaign | undefined;
  ClientToken?: string | undefined;
}
export interface SendOutboundEmailResponse {}
export interface StartAttachedFileUploadRequest {
  ClientToken?: string | undefined;
  InstanceId: string | undefined;
  FileName: string | undefined;
  FileSizeInBytes: number | undefined;
  UrlExpiryInSeconds?: number | undefined;
  FileUseCaseType: FileUseCaseType | undefined;
  AssociatedResourceArn: string | undefined;
  CreatedBy?: CreatedByInfo | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface UploadUrlMetadata {
  Url?: string | undefined;
  UrlExpiry?: string | undefined;
  HeadersToInclude?: Record<string, string> | undefined;
}
export interface StartAttachedFileUploadResponse {
  FileArn?: string | undefined;
  FileId?: string | undefined;
  CreationTime?: string | undefined;
  FileStatus?: FileStatusType | undefined;
  CreatedBy?: CreatedByInfo | undefined;
  UploadUrlMetadata?: UploadUrlMetadata | undefined;
}
export interface ChatMessage {
  ContentType: string | undefined;
  Content: string | undefined;
}
export interface PersistentChat {
  RehydrationType?: RehydrationType | undefined;
  SourceContactId?: string | undefined;
}
export interface StartChatContactResponse {
  ContactId?: string | undefined;
  ParticipantId?: string | undefined;
  ParticipantToken?: string | undefined;
  ContinuedFromContactId?: string | undefined;
}
export interface StartContactEvaluationRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  EvaluationFormId: string | undefined;
  ClientToken?: string | undefined;
}
export interface StartContactEvaluationResponse {
  EvaluationId: string | undefined;
  EvaluationArn: string | undefined;
}
export declare const IvrRecordingTrack: {
  readonly ALL: "ALL";
};
export type IvrRecordingTrack =
  (typeof IvrRecordingTrack)[keyof typeof IvrRecordingTrack];
export declare const VoiceRecordingTrack: {
  readonly ALL: "ALL";
  readonly FROM_AGENT: "FROM_AGENT";
  readonly TO_AGENT: "TO_AGENT";
};
export type VoiceRecordingTrack =
  (typeof VoiceRecordingTrack)[keyof typeof VoiceRecordingTrack];
export interface VoiceRecordingConfiguration {
  VoiceRecordingTrack?: VoiceRecordingTrack | undefined;
  IvrRecordingTrack?: IvrRecordingTrack | undefined;
}
export interface StartContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
  VoiceRecordingConfiguration: VoiceRecordingConfiguration | undefined;
}
export interface StartContactRecordingResponse {}
export interface StartContactStreamingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ChatStreamingConfiguration: ChatStreamingConfiguration | undefined;
  ClientToken?: string | undefined;
}
export interface StartContactStreamingResponse {
  StreamingId: string | undefined;
}
export interface InboundAdditionalRecipients {
  ToAddresses?: EmailAddressInfo[] | undefined;
  CcAddresses?: EmailAddressInfo[] | undefined;
}
export interface EmailAttachment {
  FileName: string | undefined;
  S3Url: string | undefined;
}
export declare const InboundMessageSourceType: {
  readonly RAW: "RAW";
};
export type InboundMessageSourceType =
  (typeof InboundMessageSourceType)[keyof typeof InboundMessageSourceType];
export declare const EmailHeaderType: {
  readonly IN_REPLY_TO: "IN_REPLY_TO";
  readonly MESSAGE_ID: "MESSAGE_ID";
  readonly REFERENCES: "REFERENCES";
  readonly X_SES_SPAM_VERDICT: "X_SES_SPAM_VERDICT";
  readonly X_SES_VIRUS_VERDICT: "X_SES_VIRUS_VERDICT";
};
export type EmailHeaderType =
  (typeof EmailHeaderType)[keyof typeof EmailHeaderType];
export interface InboundRawMessage {
  Subject: string | undefined;
  Body: string | undefined;
  ContentType: string | undefined;
  Headers?: Partial<Record<EmailHeaderType, string>> | undefined;
}
export interface InboundEmailContent {
  MessageSourceType: InboundMessageSourceType | undefined;
  RawMessage?: InboundRawMessage | undefined;
}
export interface StartEmailContactResponse {
  ContactId?: string | undefined;
}
export interface StartOutboundChatContactResponse {
  ContactId?: string | undefined;
}
export interface StartOutboundEmailContactRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  FromEmailAddress?: EmailAddressInfo | undefined;
  DestinationEmailAddress: EmailAddressInfo | undefined;
  AdditionalRecipients?: OutboundAdditionalRecipients | undefined;
  EmailMessage: OutboundEmailContent | undefined;
  ClientToken?: string | undefined;
}
export interface StartOutboundEmailContactResponse {
  ContactId?: string | undefined;
}
export declare class DestinationNotAllowedException extends __BaseException {
  readonly name: "DestinationNotAllowedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DestinationNotAllowedException, __BaseException>
  );
}
export declare class OutboundContactNotPermittedException extends __BaseException {
  readonly name: "OutboundContactNotPermittedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      OutboundContactNotPermittedException,
      __BaseException
    >
  );
}
export interface AnswerMachineDetectionConfig {
  EnableAnswerMachineDetection?: boolean | undefined;
  AwaitAnswerMachinePrompt?: boolean | undefined;
}
export interface StartOutboundVoiceContactRequest {
  Name?: string | undefined;
  Description?: string | undefined;
  References?: Record<string, Reference> | undefined;
  RelatedContactId?: string | undefined;
  DestinationPhoneNumber: string | undefined;
  ContactFlowId: string | undefined;
  InstanceId: string | undefined;
  ClientToken?: string | undefined;
  SourcePhoneNumber?: string | undefined;
  QueueId?: string | undefined;
  Attributes?: Record<string, string> | undefined;
  AnswerMachineDetectionConfig?: AnswerMachineDetectionConfig | undefined;
  CampaignId?: string | undefined;
  TrafficType?: TrafficType | undefined;
}
export interface StartOutboundVoiceContactResponse {
  ContactId?: string | undefined;
}
export interface StartScreenSharingRequest {
  ClientToken?: string | undefined;
  InstanceId: string | undefined;
  ContactId: string | undefined;
}
export interface StartScreenSharingResponse {}
export interface StartTaskContactResponse {
  ContactId?: string | undefined;
}
export interface StartWebRTCContactRequest {
  Attributes?: Record<string, string> | undefined;
  ClientToken?: string | undefined;
  ContactFlowId: string | undefined;
  InstanceId: string | undefined;
  AllowedCapabilities?: AllowedCapabilities | undefined;
  ParticipantDetails: ParticipantDetails | undefined;
  RelatedContactId?: string | undefined;
  References?: Record<string, Reference> | undefined;
  Description?: string | undefined;
}
export interface Attendee {
  AttendeeId?: string | undefined;
  JoinToken?: string | undefined;
}
export interface MediaPlacement {
  AudioHostUrl?: string | undefined;
  AudioFallbackUrl?: string | undefined;
  SignalingUrl?: string | undefined;
  TurnControlUrl?: string | undefined;
  EventIngestionUrl?: string | undefined;
}
export declare const MeetingFeatureStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly UNAVAILABLE: "UNAVAILABLE";
};
export type MeetingFeatureStatus =
  (typeof MeetingFeatureStatus)[keyof typeof MeetingFeatureStatus];
export interface AudioFeatures {
  EchoReduction?: MeetingFeatureStatus | undefined;
}
export interface MeetingFeaturesConfiguration {
  Audio?: AudioFeatures | undefined;
}
export interface Meeting {
  MediaRegion?: string | undefined;
  MediaPlacement?: MediaPlacement | undefined;
  MeetingFeatures?: MeetingFeaturesConfiguration | undefined;
  MeetingId?: string | undefined;
}
export interface ConnectionData {
  Attendee?: Attendee | undefined;
  Meeting?: Meeting | undefined;
}
export interface StartWebRTCContactResponse {
  ConnectionData?: ConnectionData | undefined;
  ContactId?: string | undefined;
  ParticipantId?: string | undefined;
  ParticipantToken?: string | undefined;
}
export declare class ContactNotFoundException extends __BaseException {
  readonly name: "ContactNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ContactNotFoundException, __BaseException>
  );
}
export interface DisconnectReason {
  Code?: string | undefined;
}
export interface StopContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  DisconnectReason?: DisconnectReason | undefined;
}
export interface StopContactResponse {}
export interface StopContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
  ContactRecordingType?: ContactRecordingType | undefined;
}
export interface StopContactRecordingResponse {}
export interface StopContactStreamingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  StreamingId: string | undefined;
}
export interface StopContactStreamingResponse {}
export interface EvaluationAnswerInput {
  Value?: EvaluationAnswerData | undefined;
}
export interface SubmitContactEvaluationRequest {
  InstanceId: string | undefined;
  EvaluationId: string | undefined;
  Answers?: Record<string, EvaluationAnswerInput> | undefined;
  Notes?: Record<string, EvaluationNote> | undefined;
}
export interface SubmitContactEvaluationResponse {
  EvaluationId: string | undefined;
  EvaluationArn: string | undefined;
}
export interface SuspendContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
  ContactRecordingType?: ContactRecordingType | undefined;
}
export interface SuspendContactRecordingResponse {}
export interface TagContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagContactResponse {}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TransferContactRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  QueueId?: string | undefined;
  UserId?: string | undefined;
  ContactFlowId: string | undefined;
  ClientToken?: string | undefined;
}
export interface TransferContactResponse {
  ContactId?: string | undefined;
  ContactArn?: string | undefined;
}
export interface UntagContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagContactResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UpdateAgentStatusRequest {
  InstanceId: string | undefined;
  AgentStatusId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  State?: AgentStatusState | undefined;
  DisplayOrder?: number | undefined;
  ResetOrderNumber?: boolean | undefined;
}
export interface UpdateAuthenticationProfileRequest {
  AuthenticationProfileId: string | undefined;
  InstanceId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  AllowedIps?: string[] | undefined;
  BlockedIps?: string[] | undefined;
  PeriodicSessionDuration?: number | undefined;
}
export interface QueueInfoInput {
  Id?: string | undefined;
}
export interface UpdateContactResponse {}
export interface UpdateContactAttributesRequest {
  InitialContactId: string | undefined;
  InstanceId: string | undefined;
  Attributes: Record<string, string> | undefined;
}
export interface UpdateContactAttributesResponse {}
export interface UpdateContactEvaluationRequest {
  InstanceId: string | undefined;
  EvaluationId: string | undefined;
  Answers?: Record<string, EvaluationAnswerInput> | undefined;
  Notes?: Record<string, EvaluationNote> | undefined;
}
export interface UpdateContactEvaluationResponse {
  EvaluationId: string | undefined;
  EvaluationArn: string | undefined;
}
export interface UpdateContactFlowContentRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  Content: string | undefined;
}
export interface UpdateContactFlowContentResponse {}
export interface UpdateContactFlowMetadataRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  ContactFlowState?: ContactFlowState | undefined;
}
export interface UpdateContactFlowMetadataResponse {}
export interface UpdateContactFlowModuleContentRequest {
  InstanceId: string | undefined;
  ContactFlowModuleId: string | undefined;
  Content: string | undefined;
}
export interface UpdateContactFlowModuleContentResponse {}
export interface UpdateContactFlowModuleMetadataRequest {
  InstanceId: string | undefined;
  ContactFlowModuleId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  State?: ContactFlowModuleState | undefined;
}
export interface UpdateContactFlowModuleMetadataResponse {}
export interface UpdateContactFlowNameRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
}
export interface UpdateContactFlowNameResponse {}
export interface RoutingCriteriaInputStepExpiry {
  DurationInSeconds?: number | undefined;
}
export interface UpdateContactRoutingDataResponse {}
export interface UpdateContactScheduleRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ScheduledTime: Date | undefined;
}
export interface UpdateContactScheduleResponse {}
export interface UpdateEmailAddressMetadataRequest {
  InstanceId: string | undefined;
  EmailAddressId: string | undefined;
  Description?: string | undefined;
  DisplayName?: string | undefined;
  ClientToken?: string | undefined;
}
export interface UpdateEmailAddressMetadataResponse {
  EmailAddressId?: string | undefined;
  EmailAddressArn?: string | undefined;
}
export interface UpdateEvaluationFormResponse {
  EvaluationFormId: string | undefined;
  EvaluationFormArn: string | undefined;
  EvaluationFormVersion: number | undefined;
}
export interface UpdateHoursOfOperationRequest {
  InstanceId: string | undefined;
  HoursOfOperationId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  TimeZone?: string | undefined;
  Config?: HoursOfOperationConfig[] | undefined;
}
export declare class ConditionalOperationFailedException extends __BaseException {
  readonly name: "ConditionalOperationFailedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      ConditionalOperationFailedException,
      __BaseException
    >
  );
}
export interface UpdateHoursOfOperationOverrideRequest {
  InstanceId: string | undefined;
  HoursOfOperationId: string | undefined;
  HoursOfOperationOverrideId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  Config?: HoursOfOperationOverrideConfig[] | undefined;
  EffectiveFrom?: string | undefined;
  EffectiveTill?: string | undefined;
}
export interface UpdateInstanceAttributeRequest {
  InstanceId: string | undefined;
  AttributeType: InstanceAttributeType | undefined;
  Value: string | undefined;
  ClientToken?: string | undefined;
}
export interface UpdateInstanceStorageConfigRequest {
  InstanceId: string | undefined;
  AssociationId: string | undefined;
  ResourceType: InstanceStorageResourceType | undefined;
  StorageConfig: InstanceStorageConfig | undefined;
  ClientToken?: string | undefined;
}
export interface UpdateParticipantAuthenticationRequest {
  State: string | undefined;
  InstanceId: string | undefined;
  Code?: string | undefined;
  Error?: string | undefined;
  ErrorDescription?: string | undefined;
}
export interface UpdateParticipantAuthenticationResponse {}
export declare const TimerEligibleParticipantRoles: {
  readonly AGENT: "AGENT";
  readonly CUSTOMER: "CUSTOMER";
};
export type TimerEligibleParticipantRoles =
  (typeof TimerEligibleParticipantRoles)[keyof typeof TimerEligibleParticipantRoles];
export declare const ParticipantTimerType: {
  readonly DISCONNECT_NONCUSTOMER: "DISCONNECT_NONCUSTOMER";
  readonly IDLE: "IDLE";
};
export type ParticipantTimerType =
  (typeof ParticipantTimerType)[keyof typeof ParticipantTimerType];
export declare const ParticipantTimerAction: {
  readonly Unset: "Unset";
};
export type ParticipantTimerAction =
  (typeof ParticipantTimerAction)[keyof typeof ParticipantTimerAction];
export type ParticipantTimerValue =
  | ParticipantTimerValue.ParticipantTimerActionMember
  | ParticipantTimerValue.ParticipantTimerDurationInMinutesMember
  | ParticipantTimerValue.$UnknownMember;
export declare namespace ParticipantTimerValue {
  interface ParticipantTimerActionMember {
    ParticipantTimerAction: ParticipantTimerAction;
    ParticipantTimerDurationInMinutes?: never;
    $unknown?: never;
  }
  interface ParticipantTimerDurationInMinutesMember {
    ParticipantTimerAction?: never;
    ParticipantTimerDurationInMinutes: number;
    $unknown?: never;
  }
  interface $UnknownMember {
    ParticipantTimerAction?: never;
    ParticipantTimerDurationInMinutes?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    ParticipantTimerAction: (value: ParticipantTimerAction) => T;
    ParticipantTimerDurationInMinutes: (value: number) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ParticipantTimerValue, visitor: Visitor<T>) => T;
}
export interface ParticipantTimerConfiguration {
  ParticipantRole: TimerEligibleParticipantRoles | undefined;
  TimerType: ParticipantTimerType | undefined;
  TimerValue: ParticipantTimerValue | undefined;
}
export interface ChatParticipantRoleConfig {
  ParticipantTimerConfigList: ParticipantTimerConfiguration[] | undefined;
}
export type UpdateParticipantRoleConfigChannelInfo =
  | UpdateParticipantRoleConfigChannelInfo.ChatMember
  | UpdateParticipantRoleConfigChannelInfo.$UnknownMember;
export declare namespace UpdateParticipantRoleConfigChannelInfo {
  interface ChatMember {
    Chat: ChatParticipantRoleConfig;
    $unknown?: never;
  }
  interface $UnknownMember {
    Chat?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Chat: (value: ChatParticipantRoleConfig) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: UpdateParticipantRoleConfigChannelInfo,
    visitor: Visitor<T>
  ) => T;
}
export interface UpdateParticipantRoleConfigRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ChannelConfiguration: UpdateParticipantRoleConfigChannelInfo | undefined;
}
export interface UpdateParticipantRoleConfigResponse {}
export interface UpdatePhoneNumberRequest {
  PhoneNumberId: string | undefined;
  TargetArn?: string | undefined;
  InstanceId?: string | undefined;
  ClientToken?: string | undefined;
}
export interface UpdatePhoneNumberResponse {
  PhoneNumberId?: string | undefined;
  PhoneNumberArn?: string | undefined;
}
export interface UpdatePhoneNumberMetadataRequest {
  PhoneNumberId: string | undefined;
  PhoneNumberDescription?: string | undefined;
  ClientToken?: string | undefined;
}
export interface UpdatePredefinedAttributeRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Values?: PredefinedAttributeValues | undefined;
}
export interface UpdatePromptRequest {
  InstanceId: string | undefined;
  PromptId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
  S3Uri?: string | undefined;
}
export interface UpdatePromptResponse {
  PromptARN?: string | undefined;
  PromptId?: string | undefined;
}
export interface UpdateQueueHoursOfOperationRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  HoursOfOperationId: string | undefined;
}
export interface UpdateQueueMaxContactsRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  MaxContacts?: number | undefined;
}
export interface UpdateQueueNameRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  Name?: string | undefined;
  Description?: string | undefined;
}
export interface UpdateQueueOutboundCallerConfigRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  OutboundCallerConfig: OutboundCallerConfig | undefined;
}
export declare const ViewSummaryFilterSensitiveLog: (obj: ViewSummary) => any;
export declare const ListViewsResponseFilterSensitiveLog: (
  obj: ListViewsResponse
) => any;
export declare const ViewVersionSummaryFilterSensitiveLog: (
  obj: ViewVersionSummary
) => any;
export declare const ListViewVersionsResponseFilterSensitiveLog: (
  obj: ListViewVersionsResponse
) => any;
export declare const ReplicateInstanceRequestFilterSensitiveLog: (
  obj: ReplicateInstanceRequest
) => any;
export declare const TranscriptCriteriaFilterSensitiveLog: (
  obj: TranscriptCriteria
) => any;
export declare const TranscriptFilterSensitiveLog: (obj: Transcript) => any;
export declare const ContactAnalysisFilterSensitiveLog: (
  obj: ContactAnalysis
) => any;
export declare const SearchableContactAttributesCriteriaFilterSensitiveLog: (
  obj: SearchableContactAttributesCriteria
) => any;
export declare const SearchableContactAttributesFilterSensitiveLog: (
  obj: SearchableContactAttributes
) => any;
export declare const SearchableSegmentAttributesCriteriaFilterSensitiveLog: (
  obj: SearchableSegmentAttributesCriteria
) => any;
export declare const SearchableSegmentAttributesFilterSensitiveLog: (
  obj: SearchableSegmentAttributes
) => any;
export declare const SearchCriteriaFilterSensitiveLog: (
  obj: SearchCriteria
) => any;
export declare const SearchContactsRequestFilterSensitiveLog: (
  obj: SearchContactsRequest
) => any;
export declare const EmailAddressMetadataFilterSensitiveLog: (
  obj: EmailAddressMetadata
) => any;
export declare const SearchEmailAddressesResponseFilterSensitiveLog: (
  obj: SearchEmailAddressesResponse
) => any;
export declare const UserIdentityInfoLiteFilterSensitiveLog: (
  obj: UserIdentityInfoLite
) => any;
export declare const UserSearchSummaryFilterSensitiveLog: (
  obj: UserSearchSummary
) => any;
export declare const SearchUsersResponseFilterSensitiveLog: (
  obj: SearchUsersResponse
) => any;
export declare const EmailAddressInfoFilterSensitiveLog: (
  obj: EmailAddressInfo
) => any;
export declare const OutboundAdditionalRecipientsFilterSensitiveLog: (
  obj: OutboundAdditionalRecipients
) => any;
export declare const OutboundRawMessageFilterSensitiveLog: (
  obj: OutboundRawMessage
) => any;
export declare const OutboundEmailContentFilterSensitiveLog: (
  obj: OutboundEmailContent
) => any;
export declare const SendOutboundEmailRequestFilterSensitiveLog: (
  obj: SendOutboundEmailRequest
) => any;
export declare const InboundAdditionalRecipientsFilterSensitiveLog: (
  obj: InboundAdditionalRecipients
) => any;
export declare const InboundRawMessageFilterSensitiveLog: (
  obj: InboundRawMessage
) => any;
export declare const InboundEmailContentFilterSensitiveLog: (
  obj: InboundEmailContent
) => any;
export declare const StartOutboundEmailContactRequestFilterSensitiveLog: (
  obj: StartOutboundEmailContactRequest
) => any;
export declare const StartOutboundVoiceContactRequestFilterSensitiveLog: (
  obj: StartOutboundVoiceContactRequest
) => any;
export declare const StartWebRTCContactRequestFilterSensitiveLog: (
  obj: StartWebRTCContactRequest
) => any;
export declare const AttendeeFilterSensitiveLog: (obj: Attendee) => any;
export declare const ConnectionDataFilterSensitiveLog: (
  obj: ConnectionData
) => any;
export declare const StartWebRTCContactResponseFilterSensitiveLog: (
  obj: StartWebRTCContactResponse
) => any;
export declare const UpdateEmailAddressMetadataRequestFilterSensitiveLog: (
  obj: UpdateEmailAddressMetadataRequest
) => any;
export declare const UpdateParticipantAuthenticationRequestFilterSensitiveLog: (
  obj: UpdateParticipantAuthenticationRequest
) => any;
