import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConnectClient";
import { UpdateUserProficienciesRequest } from "../models/models_3";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link UpdateUserProficienciesCommand}.
 */
export interface UpdateUserProficienciesCommandInput extends UpdateUserProficienciesRequest {
}
/**
 * @public
 *
 * The output of {@link UpdateUserProficienciesCommand}.
 */
export interface UpdateUserProficienciesCommandOutput extends __MetadataBearer {
}
declare const UpdateUserProficienciesCommand_base: {
    new (input: UpdateUserProficienciesCommandInput): import("@smithy/smithy-client").CommandImpl<UpdateUserProficienciesCommandInput, UpdateUserProficienciesCommandOutput, ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: UpdateUserProficienciesCommandInput): import("@smithy/smithy-client").CommandImpl<UpdateUserProficienciesCommandInput, UpdateUserProficienciesCommandOutput, ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Updates the properties associated with the proficiencies of a user.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConnectClient, UpdateUserProficienciesCommand } from "@aws-sdk/client-connect"; // ES Modules import
 * // const { ConnectClient, UpdateUserProficienciesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
 * const client = new ConnectClient(config);
 * const input = { // UpdateUserProficienciesRequest
 *   InstanceId: "STRING_VALUE", // required
 *   UserId: "STRING_VALUE", // required
 *   UserProficiencies: [ // UserProficiencyList // required
 *     { // UserProficiency
 *       AttributeName: "STRING_VALUE", // required
 *       AttributeValue: "STRING_VALUE", // required
 *       Level: Number("float"), // required
 *     },
 *   ],
 * };
 * const command = new UpdateUserProficienciesCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param UpdateUserProficienciesCommandInput - {@link UpdateUserProficienciesCommandInput}
 * @returns {@link UpdateUserProficienciesCommandOutput}
 * @see {@link UpdateUserProficienciesCommandInput} for command's `input` shape.
 * @see {@link UpdateUserProficienciesCommandOutput} for command's `response` shape.
 * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
 *
 * @throws {@link InternalServiceException} (server fault)
 *  <p>Request processing failed because of an error or failure with the service.</p>
 *
 * @throws {@link InvalidParameterException} (client fault)
 *  <p>One or more of the specified parameters are not valid.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>The request is not valid.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The specified resource was not found.</p>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p>The throttling limit has been exceeded.</p>
 *
 * @throws {@link ConnectServiceException}
 * <p>Base exception class for all service exceptions from Connect service.</p>
 *
 *
 * @public
 */
export declare class UpdateUserProficienciesCommand extends UpdateUserProficienciesCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: UpdateUserProficienciesRequest;
            output: {};
        };
        sdk: {
            input: UpdateUserProficienciesCommandInput;
            output: UpdateUserProficienciesCommandOutput;
        };
    };
}
