import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConnectClient";
import { ListApprovedOriginsRequest, ListApprovedOriginsResponse } from "../models/models_1";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link ListApprovedOriginsCommand}.
 */
export interface ListApprovedOriginsCommandInput extends ListApprovedOriginsRequest {
}
/**
 * @public
 *
 * The output of {@link ListApprovedOriginsCommand}.
 */
export interface ListApprovedOriginsCommandOutput extends ListApprovedOriginsResponse, __MetadataBearer {
}
declare const ListApprovedOriginsCommand_base: {
    new (input: ListApprovedOriginsCommandInput): import("@smithy/smithy-client").CommandImpl<ListApprovedOriginsCommandInput, ListApprovedOriginsCommandOutput, ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: ListApprovedOriginsCommandInput): import("@smithy/smithy-client").CommandImpl<ListApprovedOriginsCommandInput, ListApprovedOriginsCommandOutput, ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
 *          <p>Returns a paginated list of all approved origins associated with the instance.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConnectClient, ListApprovedOriginsCommand } from "@aws-sdk/client-connect"; // ES Modules import
 * // const { ConnectClient, ListApprovedOriginsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
 * const client = new ConnectClient(config);
 * const input = { // ListApprovedOriginsRequest
 *   InstanceId: "STRING_VALUE", // required
 *   NextToken: "STRING_VALUE",
 *   MaxResults: Number("int"),
 * };
 * const command = new ListApprovedOriginsCommand(input);
 * const response = await client.send(command);
 * // { // ListApprovedOriginsResponse
 * //   Origins: [ // OriginsList
 * //     "STRING_VALUE",
 * //   ],
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListApprovedOriginsCommandInput - {@link ListApprovedOriginsCommandInput}
 * @returns {@link ListApprovedOriginsCommandOutput}
 * @see {@link ListApprovedOriginsCommandInput} for command's `input` shape.
 * @see {@link ListApprovedOriginsCommandOutput} for command's `response` shape.
 * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
 *
 * @throws {@link InternalServiceException} (server fault)
 *  <p>Request processing failed because of an error or failure with the service.</p>
 *
 * @throws {@link InvalidParameterException} (client fault)
 *  <p>One or more of the specified parameters are not valid.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>The request is not valid.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The specified resource was not found.</p>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p>The throttling limit has been exceeded.</p>
 *
 * @throws {@link ConnectServiceException}
 * <p>Base exception class for all service exceptions from Connect service.</p>
 *
 *
 * @public
 */
export declare class ListApprovedOriginsCommand extends ListApprovedOriginsCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: ListApprovedOriginsRequest;
            output: ListApprovedOriginsResponse;
        };
        sdk: {
            input: ListApprovedOriginsCommandInput;
            output: ListApprovedOriginsCommandOutput;
        };
    };
}
